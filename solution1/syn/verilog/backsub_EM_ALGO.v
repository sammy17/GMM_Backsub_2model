// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backsub_EM_ALGO (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pixel,
        pos_r,
        parameters_address0,
        parameters_ce0,
        parameters_we0,
        parameters_d0,
        parameters_q0,
        parameters_address1,
        parameters_ce1,
        parameters_we1,
        parameters_d1,
        parameters_q1,
        x,
        back_gauss_address0,
        back_gauss_ce0,
        back_gauss_we0,
        back_gauss_d0,
        back_gauss_q0,
        back_gauss_address1,
        back_gauss_ce1,
        back_gauss_we1,
        back_gauss_d1,
        matchsum_address0,
        matchsum_ce0,
        matchsum_we0,
        matchsum_d0,
        matchsum_q0,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 146'b1;
parameter    ap_ST_st2_fsm_1 = 146'b10;
parameter    ap_ST_st3_fsm_2 = 146'b100;
parameter    ap_ST_st4_fsm_3 = 146'b1000;
parameter    ap_ST_st5_fsm_4 = 146'b10000;
parameter    ap_ST_st6_fsm_5 = 146'b100000;
parameter    ap_ST_st7_fsm_6 = 146'b1000000;
parameter    ap_ST_st8_fsm_7 = 146'b10000000;
parameter    ap_ST_st9_fsm_8 = 146'b100000000;
parameter    ap_ST_st10_fsm_9 = 146'b1000000000;
parameter    ap_ST_st11_fsm_10 = 146'b10000000000;
parameter    ap_ST_st12_fsm_11 = 146'b100000000000;
parameter    ap_ST_st13_fsm_12 = 146'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 146'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 146'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 146'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 146'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 146'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 146'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 146'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 146'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 146'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 146'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 146'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 146'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 146'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 146'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 146'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 146'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 146'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 146'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 146'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 146'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 146'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 146'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 146'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 146'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 146'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 146'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 146'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 146'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 146'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 146'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 146'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 146'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 146'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 146'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 146'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 146'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 146'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 146'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 146'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 146'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 146'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 146'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 146'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 146'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 146'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 146'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 146'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 146'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 146'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 146'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 146'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 146'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 146'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 146'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 146'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 146'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st128_fsm_127 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st129_fsm_128 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st130_fsm_129 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st131_fsm_130 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st132_fsm_131 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st133_fsm_132 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st134_fsm_133 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st135_fsm_134 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st136_fsm_135 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st137_fsm_136 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st138_fsm_137 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st139_fsm_138 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st140_fsm_139 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st141_fsm_140 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st142_fsm_141 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st143_fsm_142 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st144_fsm_143 = 146'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st145_fsm_144 = 146'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st146_fsm_145 = 146'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_7A = 32'b1111010;
parameter    ap_const_lv32_81 = 32'b10000001;
parameter    ap_const_lv32_89 = 32'b10001001;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_72 = 32'b1110010;
parameter    ap_const_lv32_77 = 32'b1110111;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_86 = 32'b10000110;
parameter    ap_const_lv32_90 = 32'b10010000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_8A = 32'b10001010;
parameter    ap_const_lv32_8B = 32'b10001011;
parameter    ap_const_lv32_8C = 32'b10001100;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_91 = 32'b10010001;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_8D = 32'b10001101;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_3E4CCCCD = 32'b111110010011001100110011001101;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_68 = 32'b1101000;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_79 = 32'b1111001;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_88 = 32'b10001000;
parameter    ap_const_lv32_87 = 32'b10000111;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_6E = 32'b1101110;
parameter    ap_const_lv32_73 = 32'b1110011;
parameter    ap_const_lv32_7B = 32'b1111011;
parameter    ap_const_lv32_82 = 32'b10000010;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_3F333333 = 32'b111111001100110011001100110011;
parameter    ap_const_lv32_447A0000 = 32'b1000100011110100000000000000000;
parameter    ap_const_lv64_4004000000000000 = 64'b100000000000100000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv13_2 = 13'b10;
parameter    ap_const_lv13_3 = 13'b11;
parameter    ap_const_lv13_4 = 13'b100;
parameter    ap_const_lv13_5 = 13'b101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv17_12C = 17'b100101100;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv18_1 = 18'b1;
parameter    ap_const_lv46_0 = 46'b0000000000000000000000000000000000000000000000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv19_1 = 19'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_3 = 5'b11;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] pixel;
input  [8:0] pos_r;
output  [10:0] parameters_address0;
output   parameters_ce0;
output   parameters_we0;
output  [31:0] parameters_d0;
input  [31:0] parameters_q0;
output  [10:0] parameters_address1;
output   parameters_ce1;
output   parameters_we1;
output  [31:0] parameters_d1;
input  [31:0] parameters_q1;
input  [8:0] x;
output  [17:0] back_gauss_address0;
output   back_gauss_ce0;
output   back_gauss_we0;
output  [0:0] back_gauss_d0;
input  [0:0] back_gauss_q0;
output  [17:0] back_gauss_address1;
output   back_gauss_ce1;
output   back_gauss_we1;
output  [0:0] back_gauss_d1;
output  [17:0] matchsum_address0;
output   matchsum_ce0;
output   matchsum_we0;
output  [7:0] matchsum_d0;
input  [7:0] matchsum_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] parameters_address0;
reg parameters_ce0;
reg parameters_we0;
reg[31:0] parameters_d0;
reg[10:0] parameters_address1;
reg parameters_ce1;
reg parameters_we1;
reg[17:0] back_gauss_address0;
reg back_gauss_ce0;
reg back_gauss_we0;
reg[17:0] back_gauss_address1;
reg back_gauss_ce1;
reg back_gauss_we1;
reg[0:0] back_gauss_d1;
reg[17:0] matchsum_address0;
reg matchsum_ce0;
reg matchsum_we0;
reg[7:0] matchsum_d0;
reg[0:0] ap_return;
(* fsm_encoding = "none" *) reg   [145:0] ap_CS_fsm = 146'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_164;
reg   [31:0] alpha_w = 32'b111011100000110001001001101111;
reg   [0:0] akt_address0;
reg    akt_ce0;
reg    akt_we0;
wire   [31:0] akt_d0;
wire   [31:0] akt_q0;
wire   [0:0] akt_address1;
reg    akt_ce1;
reg    akt_we1;
wire   [31:0] akt_d1;
reg   [31:0] vinit = 32'b1000110100011001010000000000000;
wire   [0:0] F_address0;
reg    F_ce0;
reg    F_we0;
wire   [31:0] F_d0;
wire   [0:0] F_address1;
reg    F_ce1;
reg    F_we1;
wire   [31:0] F_d1;
reg   [31:0] reg_514;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_243;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_250;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_258;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_bdd_266;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_bdd_274;
reg    ap_sig_cseq_ST_st107_fsm_106;
reg    ap_sig_bdd_282;
reg    ap_sig_cseq_ST_st123_fsm_122;
reg    ap_sig_bdd_290;
reg    ap_sig_cseq_ST_st130_fsm_129;
reg    ap_sig_bdd_298;
reg    ap_sig_cseq_ST_st138_fsm_137;
reg    ap_sig_bdd_305;
reg   [31:0] reg_524;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_314;
wire   [31:0] grp_fu_475_p1;
reg   [31:0] reg_530;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_324;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_331;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] reg_538;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_342;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_349;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_357;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_365;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_bdd_373;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_381;
reg    ap_sig_cseq_ST_st86_fsm_85;
reg    ap_sig_bdd_389;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_bdd_397;
reg    ap_sig_cseq_ST_st104_fsm_103;
reg    ap_sig_bdd_405;
reg    ap_sig_cseq_ST_st115_fsm_114;
reg    ap_sig_bdd_413;
reg    ap_sig_cseq_ST_st120_fsm_119;
reg    ap_sig_bdd_421;
reg    ap_sig_cseq_ST_st128_fsm_127;
reg    ap_sig_bdd_429;
reg    ap_sig_cseq_ST_st135_fsm_134;
reg    ap_sig_bdd_437;
reg    ap_sig_cseq_ST_st145_fsm_144;
reg    ap_sig_bdd_445;
wire   [31:0] grp_fu_493_p2;
reg   [31:0] reg_549;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_455;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_462;
wire   [63:0] grp_fu_507_p1;
reg   [63:0] reg_554;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_472;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_479;
wire   [63:0] grp_fu_498_p2;
reg   [63:0] reg_559;
wire   [31:0] grp_fu_459_p2;
reg   [31:0] reg_564;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_491;
reg   [7:0] reg_572;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_500;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_507;
wire   [31:0] grp_fu_453_p2;
reg   [31:0] reg_576;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_517;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_bdd_525;
reg    ap_sig_cseq_ST_st110_fsm_109;
reg    ap_sig_bdd_533;
wire   [12:0] tmp_31_fu_606_p2;
reg   [12:0] tmp_31_reg_1811;
wire   [12:0] tmp_32_fu_612_p2;
reg   [12:0] tmp_32_reg_1822;
wire   [31:0] tmp_s_fu_623_p1;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_554;
wire   [12:0] tmp_35_fu_638_p2;
reg   [12:0] tmp_35_reg_1843;
reg   [10:0] parameters_addr_9_reg_1849;
reg   [31:0] parameters_load_2_reg_1855;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_568;
reg   [10:0] parameters_addr_12_reg_1861;
reg   [31:0] parameters_load_8_reg_1867;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_578;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_587;
reg   [31:0] parameters_load_reg_1886;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_599;
reg   [31:0] parameters_load_3_reg_1896;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_607;
reg   [0:0] p_Result_s_reg_1901;
wire   [31:0] p_Val2_3_fu_802_p3;
reg   [31:0] p_Val2_3_reg_1906;
wire   [31:0] abs_fu_833_p3;
reg   [31:0] abs_reg_1912;
wire   [63:0] grp_fu_478_p1;
reg   [63:0] tmp_53_reg_1917;
reg   [0:0] p_Result_2_reg_1922;
wire   [31:0] p_Val2_9_fu_961_p3;
reg   [31:0] p_Val2_9_reg_1927;
wire   [31:0] abs_1_fu_992_p3;
reg   [31:0] abs_1_reg_1933;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_628;
reg   [63:0] tmp_59_1_reg_1938;
wire   [16:0] tmp_33_fu_1004_p2;
reg   [16:0] tmp_33_reg_1943;
wire   [16:0] tmp_34_fu_1013_p2;
reg   [16:0] tmp_34_reg_1948;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_640;
wire   [17:0] tmp_58_fu_1018_p3;
reg   [17:0] tmp_58_reg_1953;
reg   [17:0] matchsum_addr_3_reg_1959;
reg   [17:0] back_gauss_addr_reg_1964;
wire   [0:0] tmp_9_fu_1110_p2;
reg   [0:0] tmp_9_reg_1969;
wire   [31:0] grp_fu_469_p2;
reg   [31:0] sorted_F_1_2_reg_1974;
wire   [0:0] tmp_23_fu_1152_p2;
reg   [0:0] tmp_23_reg_1982;
wire   [0:0] tmp_28_fu_1158_p2;
reg   [0:0] tmp_28_reg_1987;
wire   [0:0] or_cond1_fu_1168_p2;
reg   [0:0] or_cond1_reg_1993;
wire   [0:0] tmp_95_fu_1212_p2;
reg   [0:0] tmp_95_reg_1999;
wire   [0:0] grp_fu_481_p2;
reg   [0:0] tmp_98_reg_2004;
reg   [17:0] matchsum_addr_4_reg_2009;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_669;
reg   [17:0] back_gauss_addr_1_reg_2014;
wire   [0:0] tmp_18_fu_1311_p2;
reg   [0:0] tmp_18_reg_2020;
wire   [0:0] tmp_61_fu_1372_p2;
reg   [0:0] tmp_61_reg_2025;
wire   [0:0] tmp_66_fu_1390_p2;
reg   [0:0] tmp_66_reg_2031;
reg   [0:0] tmp_78_reg_2036;
wire   [0:0] tmp_99_fu_1401_p2;
reg   [0:0] tmp_99_reg_2041;
wire   [18:0] tmp_92_cast_fu_1406_p1;
reg   [18:0] tmp_92_cast_reg_2047;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_689;
wire   [0:0] or_cond_fu_1423_p2;
reg   [0:0] or_cond_reg_2053;
wire   [0:0] tmp_90_fu_1433_p2;
reg   [0:0] tmp_90_reg_2057;
wire   [3:0] max_val_2_1_fu_1438_p3;
reg   [3:0] max_val_2_1_reg_2061;
wire   [12:0] max_val_2_1_cast5_fu_1446_p1;
reg   [12:0] max_val_2_1_cast5_reg_2068;
wire   [12:0] min_val_1_1_cast3_fu_1465_p1;
reg   [12:0] min_val_1_1_cast3_reg_2075;
wire   [0:0] tmp_75_fu_1494_p2;
reg   [0:0] tmp_75_reg_2081;
wire   [31:0] tmp_88_fu_1514_p1;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_713;
wire   [31:0] tmp_112_1_fu_1519_p1;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_722;
wire   [31:0] grp_fu_447_p2;
reg   [31:0] matchsumtot_2_1_reg_2095;
wire   [0:0] tmp_106_fu_1560_p2;
reg   [0:0] tmp_106_reg_2100;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_bdd_733;
wire   [12:0] grp_fu_510_p2;
reg   [12:0] tmp_83_reg_2104;
reg   [10:0] parameters_addr_13_reg_2109;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_bdd_746;
reg   [10:0] parameters_addr_14_reg_2114;
reg   [10:0] parameters_addr_15_reg_2119;
reg   [17:0] matchsum_addr_reg_2124;
wire   [0:0] tmp_69_fu_1619_p2;
reg   [0:0] tmp_69_reg_2134;
reg   [31:0] akt_load_reg_2138;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_764;
wire   [31:0] j5_fu_1631_p2;
reg   [31:0] j5_reg_2143;
reg    ap_sig_cseq_ST_st139_fsm_138;
reg    ap_sig_bdd_773;
wire   [0:0] tmp_127_fu_1637_p1;
reg   [0:0] tmp_127_reg_2148;
wire   [31:0] sorted_F_1_42_fu_1641_p3;
reg   [31:0] sorted_F_1_42_reg_2153;
wire   [0:0] tmp_114_fu_1689_p2;
reg   [0:0] tmp_114_reg_2160;
reg    ap_sig_cseq_ST_st140_fsm_139;
reg    ap_sig_bdd_786;
wire   [31:0] index_1_fu_1706_p3;
reg    ap_sig_cseq_ST_st141_fsm_140;
reg    ap_sig_bdd_795;
wire   [0:0] tmp_81_fu_1701_p2;
wire   [0:0] tmp_132_fu_1713_p1;
reg   [0:0] tmp_132_reg_2173;
wire   [31:0] sorted_weight_0_2_fu_1717_p3;
reg   [31:0] matchsumtot_1_reg_375;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_813;
reg   [31:0] matchsumtot_1_1_reg_387;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_825;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_832;
reg   [31:0] sorted_F_1_reg_398;
reg   [31:0] j5_0_in_reg_407;
reg   [31:0] index_1_1_reg_419;
reg   [0:0] p_0_phi_fu_435_p4;
reg   [0:0] p_0_reg_431;
reg    ap_sig_cseq_ST_st146_fsm_145;
reg    ap_sig_bdd_850;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_860;
wire  signed [63:0] tmp_52_fu_618_p1;
wire  signed [63:0] tmp_57_1_fu_633_p1;
wire  signed [63:0] tmp_55_fu_643_p1;
wire  signed [63:0] tmp_66_1_fu_653_p1;
wire  signed [63:0] tmp_36_fu_658_p1;
wire  signed [63:0] tmp_52_1_fu_677_p1;
wire   [63:0] tmp_60_fu_1026_p1;
wire   [63:0] tmp_74_fu_1223_p3;
wire  signed [63:0] tmp_71_fu_1474_p1;
wire   [63:0] tmp_127_cast_fu_1489_p1;
wire  signed [63:0] tmp_73_fu_1509_p1;
wire  signed [63:0] tmp_86_fu_1566_p1;
wire  signed [63:0] tmp_84_fu_1571_p1;
wire  signed [63:0] tmp_39_fu_1579_p1;
wire  signed [63:0] tmp_45_fu_1588_p1;
wire  signed [63:0] tmp_56_fu_1597_p1;
wire   [63:0] tmp_126_cast_fu_1614_p1;
wire   [63:0] tmp_40_fu_1602_p1;
wire   [63:0] tmp_129_fu_1738_p1;
reg    ap_sig_cseq_ST_st142_fsm_141;
reg    ap_sig_bdd_896;
wire  signed [63:0] tmp_130_cast_fu_1801_p1;
wire   [0:0] tmp_119_fu_1779_p2;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_922;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_936;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_bdd_945;
reg    ap_sig_cseq_ST_st105_fsm_104;
reg    ap_sig_bdd_953;
reg    ap_sig_cseq_ST_st106_fsm_105;
reg    ap_sig_bdd_962;
reg    ap_sig_cseq_ST_st121_fsm_120;
reg    ap_sig_bdd_970;
reg    ap_sig_cseq_ST_st122_fsm_121;
reg    ap_sig_bdd_979;
reg    ap_sig_cseq_ST_st129_fsm_128;
reg    ap_sig_bdd_988;
reg    ap_sig_cseq_ST_st137_fsm_136;
reg    ap_sig_bdd_999;
reg    ap_sig_cseq_ST_st136_fsm_135;
reg    ap_sig_bdd_1023;
wire   [31:0] grp_fu_464_p2;
wire   [7:0] tmp_65_fu_1624_p2;
reg   [31:0] grp_fu_443_p0;
reg   [31:0] grp_fu_443_p1;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_1057;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_1065;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_bdd_1073;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_1081;
reg    ap_sig_cseq_ST_st91_fsm_90;
reg    ap_sig_bdd_1090;
reg    ap_sig_cseq_ST_st100_fsm_99;
reg    ap_sig_bdd_1097;
reg    ap_sig_cseq_ST_st111_fsm_110;
reg    ap_sig_bdd_1105;
reg    ap_sig_cseq_ST_st116_fsm_115;
reg    ap_sig_bdd_1113;
reg    ap_sig_cseq_ST_st124_fsm_123;
reg    ap_sig_bdd_1120;
reg    ap_sig_cseq_ST_st131_fsm_130;
reg    ap_sig_bdd_1128;
reg   [31:0] grp_fu_453_p0;
reg   [31:0] grp_fu_453_p1;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_bdd_1146;
reg    ap_sig_cseq_ST_st96_fsm_95;
reg    ap_sig_bdd_1153;
reg   [31:0] grp_fu_459_p0;
reg   [31:0] grp_fu_459_p1;
reg   [31:0] grp_fu_475_p0;
reg   [31:0] grp_fu_481_p0;
reg   [31:0] grp_fu_481_p1;
wire   [31:0] sorted_F_0_1_fu_1174_p3;
wire   [31:0] sorted_F_0_s_fu_1317_p3;
reg   [31:0] grp_fu_493_p1;
reg   [63:0] grp_fu_498_p0;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_1187;
reg   [31:0] grp_fu_507_p0;
wire   [11:0] p_shl_fu_582_p3;
wire   [9:0] p_shl2_fu_594_p3;
wire   [12:0] p_shl_cast_fu_590_p1;
wire   [12:0] p_shl2_cast_fu_602_p1;
wire   [12:0] tmp_56_1_fu_628_p2;
wire   [12:0] tmp_65_1_fu_648_p2;
wire  signed [31:0] tmp_31_cast_fu_668_p1;
wire   [31:0] tmp_51_s_fu_671_p2;
wire   [31:0] p_Val2_s_fu_682_p1;
wire   [22:0] loc_V_1_fu_704_p1;
wire   [23:0] p_Result_1_fu_708_p3;
wire   [7:0] loc_V_fu_694_p4;
wire   [8:0] tmp_i_i_i_cast7_fu_720_p1;
wire   [8:0] sh_assign_fu_724_p2;
wire   [7:0] tmp_4_i_i_fu_738_p2;
wire   [0:0] isNeg_fu_730_p3;
wire  signed [8:0] tmp_4_i_i_cast_fu_744_p1;
wire   [8:0] sh_assign_1_fu_748_p3;
wire  signed [31:0] sh_assign_1_cast_fu_756_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_760_p1;
wire   [77:0] tmp_2_i_i_fu_716_p1;
wire   [77:0] tmp_6_i_i_fu_764_p1;
wire   [23:0] tmp_7_i_i_fu_768_p2;
wire   [0:0] tmp_96_fu_780_p3;
wire   [77:0] tmp_9_i_i_fu_774_p2;
wire   [31:0] tmp_92_fu_788_p1;
wire   [31:0] tmp_93_fu_792_p4;
wire   [31:0] p_Val2_7_i_i_fu_810_p2;
wire   [31:0] p_Val2_5_fu_815_p3;
wire   [0:0] abscond_fu_827_p2;
wire   [31:0] neg_fu_821_p2;
wire   [31:0] p_Val2_6_fu_841_p1;
wire   [22:0] loc_V_3_fu_863_p1;
wire   [23:0] p_Result_3_fu_867_p3;
wire   [7:0] loc_V_2_fu_853_p4;
wire   [8:0] tmp_i_i_i1_cast6_fu_879_p1;
wire   [8:0] sh_assign_2_fu_883_p2;
wire   [7:0] tmp_4_i_i1_fu_897_p2;
wire   [0:0] isNeg_1_fu_889_p3;
wire  signed [8:0] tmp_4_i_i1_cast_fu_903_p1;
wire   [8:0] sh_assign_3_fu_907_p3;
wire  signed [31:0] sh_assign_3_cast_fu_915_p1;
wire  signed [23:0] sh_assign_3_cast_cast_fu_919_p1;
wire   [77:0] tmp_2_i_i1_fu_875_p1;
wire   [77:0] tmp_6_i_i1_fu_923_p1;
wire   [23:0] tmp_7_i_i1_fu_927_p2;
wire   [0:0] tmp_116_fu_939_p3;
wire   [77:0] tmp_9_i_i1_fu_933_p2;
wire   [31:0] tmp_94_fu_947_p1;
wire   [31:0] tmp_108_fu_951_p4;
wire   [31:0] p_Val2_7_i_i1_fu_969_p2;
wire   [31:0] p_Val2_11_fu_974_p3;
wire   [0:0] abscond_1_fu_986_p2;
wire   [31:0] neg_1_fu_980_p2;
wire   [8:0] tmp_33_fu_1004_p1;
wire   [16:0] pos_cast_fu_1010_p1;
wire   [63:0] tmp_54_to_int_fu_1032_p1;
wire   [63:0] tmp_58_to_int_fu_1050_p1;
wire   [10:0] tmp_1_fu_1036_p4;
wire   [51:0] tmp_102_fu_1046_p1;
wire   [0:0] notrhs_fu_1074_p2;
wire   [0:0] notlhs_fu_1068_p2;
wire   [10:0] tmp_3_fu_1054_p4;
wire   [51:0] tmp_103_fu_1064_p1;
wire   [0:0] notrhs1_fu_1092_p2;
wire   [0:0] notlhs1_fu_1086_p2;
wire   [0:0] tmp_5_fu_1080_p2;
wire   [0:0] tmp_6_fu_1098_p2;
wire   [0:0] tmp_7_fu_1104_p2;
wire   [0:0] grp_fu_503_p2;
wire   [31:0] sorted_F_0_to_int_fu_1116_p1;
wire   [7:0] tmp_19_fu_1120_p4;
wire   [22:0] tmp_122_fu_1130_p1;
wire   [0:0] notrhs4_fu_1140_p2;
wire   [0:0] notlhs4_fu_1134_p2;
wire   [0:0] tmp_21_fu_1146_p2;
wire   [0:0] tmp_27_fu_486_p2;
wire   [0:0] tmp_fu_1164_p2;
wire   [31:0] sorted_F_0_1_to_int_fu_1182_p1;
wire   [7:0] tmp_91_fu_1186_p4;
wire   [22:0] tmp_125_fu_1196_p1;
wire   [0:0] notrhs9_fu_1206_p2;
wire   [0:0] notlhs9_fu_1200_p2;
wire   [17:0] tmp_68_fu_1218_p2;
wire   [63:0] tmp_55_1_to_int_fu_1233_p1;
wire   [63:0] tmp_60_1_to_int_fu_1251_p1;
wire   [10:0] tmp_10_fu_1237_p4;
wire   [51:0] tmp_120_fu_1247_p1;
wire   [0:0] notrhs2_fu_1275_p2;
wire   [0:0] notlhs2_fu_1269_p2;
wire   [10:0] tmp_12_fu_1255_p4;
wire   [51:0] tmp_121_fu_1265_p1;
wire   [0:0] notrhs3_fu_1293_p2;
wire   [0:0] notlhs3_fu_1287_p2;
wire   [0:0] tmp_14_fu_1281_p2;
wire   [0:0] tmp_15_fu_1299_p2;
wire   [0:0] tmp_16_fu_1305_p2;
wire   [31:0] sorted_F_1_2_to_int_fu_1325_p1;
wire   [31:0] sorted_F_0_to_int_41_fu_1342_p1;
wire   [7:0] tmp_29_fu_1328_p4;
wire   [22:0] tmp_123_fu_1338_p1;
wire   [0:0] notrhs6_fu_1366_p2;
wire   [0:0] notlhs6_fu_1360_p2;
wire   [7:0] tmp_59_fu_1346_p4;
wire   [22:0] tmp_124_fu_1356_p1;
wire   [0:0] notrhs7_fu_1384_p2;
wire   [0:0] notlhs7_fu_1378_p2;
wire   [0:0] tmp_97_fu_1396_p2;
wire   [0:0] tmp_67_fu_1409_p2;
wire   [0:0] tmp_79_fu_1413_p2;
wire   [0:0] tmp1_fu_1418_p2;
wire   [3:0] p_cast_fu_1429_p1;
wire   [0:0] tmp_100_fu_1453_p2;
wire   [3:0] min_val_1_cast_fu_1450_p1;
wire   [3:0] min_val_1_1_fu_1457_p3;
wire   [12:0] tmp_70_fu_1469_p2;
wire   [18:0] tmp_74_cast_fu_1479_p1;
wire   [18:0] tmp_110_fu_1483_p2;
wire   [12:0] tmp_72_fu_1505_p2;
wire   [31:0] matchsumtot_1_1_to_int_fu_1524_p1;
wire   [7:0] tmp_101_fu_1528_p4;
wire   [22:0] tmp_126_fu_1538_p1;
wire   [0:0] notrhs5_fu_1548_p2;
wire   [0:0] notlhs5_fu_1542_p2;
wire   [0:0] tmp_104_fu_1554_p2;
wire   [12:0] tmp_38_fu_1575_p2;
wire   [12:0] tmp_44_fu_1584_p2;
wire   [12:0] tmp_51_fu_1593_p2;
wire   [18:0] tmp_40_cast_fu_1606_p1;
wire   [18:0] tmp_109_fu_1609_p2;
wire   [31:0] sorted_F_1_to_int_fu_1649_p1;
wire   [7:0] tmp_107_fu_1652_p4;
wire   [22:0] tmp_131_fu_1662_p1;
wire   [0:0] notrhs8_fu_1672_p2;
wire   [0:0] notlhs8_fu_1666_p2;
wire   [0:0] tmp_111_fu_1678_p2;
wire   [0:0] tmp_112_fu_1684_p2;
wire   [0:0] tmp_80_fu_1695_p2;
wire   [0:0] not_j5_0_in_t_fu_1726_p2;
wire   [17:0] tmp_128_fu_1731_p3;
wire   [31:0] B_1_to_int_fu_1743_p1;
wire   [7:0] tmp_115_fu_1747_p4;
wire   [22:0] tmp_133_fu_1757_p1;
wire   [0:0] notrhs10_fu_1767_p2;
wire   [0:0] notlhs10_fu_1761_p2;
wire   [0:0] tmp_117_fu_1773_p2;
wire   [18:0] tmp_134_fu_1785_p1;
wire   [18:0] tmp_135_fu_1789_p3;
wire   [18:0] tmp_130_fu_1796_p2;
reg   [1:0] grp_fu_443_opcode;
wire    grp_fu_443_ce;
wire    grp_fu_447_ce;
wire    grp_fu_453_ce;
wire    grp_fu_459_ce;
wire    grp_fu_464_ce;
wire    grp_fu_469_ce;
wire    grp_fu_475_ce;
reg   [4:0] grp_fu_481_opcode;
wire   [4:0] tmp_27_fu_486_opcode;
wire    grp_fu_493_ce;
wire    grp_fu_498_ce;
wire   [4:0] grp_fu_503_opcode;
wire    grp_fu_507_ce;
reg   [0:0] ap_return_preg = 1'b0;
reg   [145:0] ap_NS_fsm;
wire   [16:0] tmp_33_fu_1004_p10;


backsub_EM_ALGO_akt #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
akt_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( akt_address0 ),
    .ce0( akt_ce0 ),
    .we0( akt_we0 ),
    .d0( akt_d0 ),
    .q0( akt_q0 ),
    .address1( akt_address1 ),
    .ce1( akt_ce1 ),
    .we1( akt_we1 ),
    .d1( akt_d1 )
);

backsub_EM_ALGO_F #(
    .DataWidth( 32 ),
    .AddressRange( 2 ),
    .AddressWidth( 1 ))
F_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( F_address0 ),
    .ce0( F_ce0 ),
    .we0( F_we0 ),
    .d0( F_d0 ),
    .address1( F_address1 ),
    .ce1( F_ce1 ),
    .we1( F_we1 ),
    .d1( F_d1 )
);

backsub_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_faddfsub_32ns_32ns_32_5_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_443_p0 ),
    .din1( grp_fu_443_p1 ),
    .opcode( grp_fu_443_opcode ),
    .ce( grp_fu_443_ce ),
    .dout( grp_fu_443_p2 )
);

backsub_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fadd_32ns_32ns_32_5_full_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( matchsumtot_1_reg_375 ),
    .din1( reg_530 ),
    .ce( grp_fu_447_ce ),
    .dout( grp_fu_447_p2 )
);

backsub_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fmul_32ns_32ns_32_4_max_dsp_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_453_p0 ),
    .din1( grp_fu_453_p1 ),
    .ce( grp_fu_453_ce ),
    .dout( grp_fu_453_p2 )
);

backsub_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fdiv_32ns_32ns_32_16_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_459_p0 ),
    .din1( grp_fu_459_p1 ),
    .ce( grp_fu_459_ce ),
    .dout( grp_fu_459_p2 )
);

backsub_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fdiv_32ns_32ns_32_16_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( alpha_w ),
    .din1( parameters_load_8_reg_1867 ),
    .ce( grp_fu_464_ce ),
    .dout( grp_fu_464_p2 )
);

backsub_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fdiv_32ns_32ns_32_16_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( parameters_load_8_reg_1867 ),
    .din1( reg_524 ),
    .ce( grp_fu_469_ce ),
    .dout( grp_fu_469_p2 )
);

backsub_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_sitofp_32ns_32_6_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_475_p0 ),
    .ce( grp_fu_475_ce ),
    .dout( grp_fu_475_p1 )
);

backsub_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backsub_fpext_32ns_64_1_U8(
    .din0( reg_549 ),
    .dout( grp_fu_478_p1 )
);

backsub_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
backsub_fcmp_32ns_32ns_1_1_U9(
    .din0( grp_fu_481_p0 ),
    .din1( grp_fu_481_p1 ),
    .opcode( grp_fu_481_opcode ),
    .dout( grp_fu_481_p2 )
);

backsub_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
backsub_fcmp_32ns_32ns_1_1_U10(
    .din0( reg_564 ),
    .din1( ap_const_lv32_447A0000 ),
    .opcode( tmp_27_fu_486_opcode ),
    .dout( tmp_27_fu_486_p2 )
);

backsub_fsqrt_32ns_32ns_32_12 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
backsub_fsqrt_32ns_32ns_32_12_U11(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( ap_const_lv32_0 ),
    .din1( grp_fu_493_p1 ),
    .ce( grp_fu_493_ce ),
    .dout( grp_fu_493_p2 )
);

backsub_dmul_64ns_64ns_64_6_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
backsub_dmul_64ns_64ns_64_6_max_dsp_U12(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_498_p0 ),
    .din1( ap_const_lv64_4004000000000000 ),
    .ce( grp_fu_498_ce ),
    .dout( grp_fu_498_p2 )
);

backsub_dcmp_64ns_64ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
backsub_dcmp_64ns_64ns_1_1_U13(
    .din0( reg_554 ),
    .din1( reg_559 ),
    .opcode( grp_fu_503_opcode ),
    .dout( grp_fu_503_p2 )
);

backsub_sitodp_32ns_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
backsub_sitodp_32ns_64_6_U14(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_507_p0 ),
    .ce( grp_fu_507_ce ),
    .dout( grp_fu_507_p1 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_return_preg
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv1_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
            ap_return_preg <= p_0_phi_fu_435_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & ~(ap_const_lv1_0 == tmp_81_fu_1701_p2))) begin
        index_1_1_reg_419 <= index_1_fu_1706_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137)) begin
        index_1_1_reg_419 <= ap_const_lv32_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & ~(ap_const_lv1_0 == tmp_81_fu_1701_p2))) begin
        j5_0_in_reg_407 <= j5_reg_2143;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137)) begin
        j5_0_in_reg_407 <= ap_const_lv32_1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34) & ~(tmp_99_reg_2041 == ap_const_lv1_0))) begin
        matchsumtot_1_1_reg_387 <= matchsumtot_1_reg_375;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        matchsumtot_1_1_reg_387 <= matchsumtot_2_1_reg_2095;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) & ~(tmp_75_reg_2081 == ap_const_lv1_0))) begin
        matchsumtot_1_reg_375 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        matchsumtot_1_reg_375 <= grp_fu_475_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        p_0_reg_431 <= ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145) & ~(tmp_90_reg_2057 == ap_const_lv1_0))) begin
        p_0_reg_431 <= ap_const_lv1_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st130_fsm_129) | (ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137))) begin
        reg_514 <= parameters_q1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st67_fsm_66) | (ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_106) | (ap_const_logic_1 == ap_sig_cseq_ST_st123_fsm_122))) begin
        reg_514 <= parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & ~(ap_const_lv1_0 == tmp_81_fu_1701_p2))) begin
        sorted_F_1_reg_398 <= sorted_F_1_42_reg_2153;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137)) begin
        sorted_F_1_reg_398 <= sorted_F_1_2_reg_1974;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        abs_1_reg_1933 <= abs_1_fu_992_p3;
        tmp_59_1_reg_1938 <= grp_fu_478_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        abs_reg_1912 <= abs_fu_833_p3;
        tmp_53_reg_1917 <= grp_fu_478_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        akt_load_reg_2138 <= akt_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        back_gauss_addr_1_reg_2014[17 : 1] <= tmp_74_fu_1223_p3[17 : 1];
        matchsum_addr_4_reg_2009[17 : 1] <= tmp_74_fu_1223_p3[17 : 1];
        tmp_18_reg_2020 <= tmp_18_fu_1311_p2;
        tmp_61_reg_2025 <= tmp_61_fu_1372_p2;
        tmp_66_reg_2031 <= tmp_66_fu_1390_p2;
        tmp_78_reg_2036 <= grp_fu_481_p2;
        tmp_99_reg_2041 <= tmp_99_fu_1401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        back_gauss_addr_reg_1964[17 : 1] <= tmp_60_fu_1026_p1[17 : 1];
        matchsum_addr_3_reg_1959[17 : 1] <= tmp_60_fu_1026_p1[17 : 1];
        sorted_F_1_2_reg_1974 <= grp_fu_469_p2;
        tmp_23_reg_1982 <= tmp_23_fu_1152_p2;
        tmp_28_reg_1987 <= tmp_28_fu_1158_p2;
        tmp_34_reg_1948 <= tmp_34_fu_1013_p2;
        tmp_58_reg_1953[17 : 1] <= tmp_58_fu_1018_p3[17 : 1];
        tmp_9_reg_1969 <= tmp_9_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st139_fsm_138)) begin
        j5_reg_2143 <= j5_fu_1631_p2;
        sorted_F_1_42_reg_2153 <= sorted_F_1_42_fu_1641_p3;
        tmp_127_reg_2148 <= tmp_127_fu_1637_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        matchsum_addr_reg_2124 <= tmp_126_cast_fu_1614_p1;
        tmp_69_reg_2134 <= tmp_69_fu_1619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        matchsumtot_2_1_reg_2095 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        max_val_2_1_cast5_reg_2068[1 : 0] <= max_val_2_1_cast5_fu_1446_p1[1 : 0];max_val_2_1_cast5_reg_2068[3] <= max_val_2_1_cast5_fu_1446_p1[3];
        max_val_2_1_reg_2061[1 : 0] <= max_val_2_1_fu_1438_p3[1 : 0];max_val_2_1_reg_2061[3] <= max_val_2_1_fu_1438_p3[3];
        min_val_1_1_cast3_reg_2075[1 : 0] <= min_val_1_1_cast3_fu_1465_p1[1 : 0];min_val_1_1_cast3_reg_2075[3] <= min_val_1_1_cast3_fu_1465_p1[3];
        or_cond_reg_2053 <= or_cond_fu_1423_p2;
        tmp_90_reg_2057 <= tmp_90_fu_1433_p2;
        tmp_92_cast_reg_2047[17 : 1] <= tmp_92_cast_fu_1406_p1[17 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        or_cond1_reg_1993 <= or_cond1_fu_1168_p2;
        tmp_95_reg_1999 <= tmp_95_fu_1212_p2;
        tmp_98_reg_2004 <= grp_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        p_Result_2_reg_1922 <= p_Val2_6_fu_841_p1[ap_const_lv32_1F];
        p_Val2_9_reg_1927 <= p_Val2_9_fu_961_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        p_Result_s_reg_1901 <= p_Val2_s_fu_682_p1[ap_const_lv32_1F];
        p_Val2_3_reg_1906 <= p_Val2_3_fu_802_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        parameters_addr_12_reg_1861[10 : 1] <= tmp_66_1_fu_653_p1[10 : 1];
        parameters_load_2_reg_1855 <= parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        parameters_addr_13_reg_2109 <= tmp_39_fu_1579_p1;
        parameters_addr_14_reg_2114 <= tmp_45_fu_1588_p1;
        parameters_addr_15_reg_2119 <= tmp_56_fu_1597_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        parameters_addr_9_reg_1849[10 : 1] <= tmp_55_fu_643_p1[10 : 1];
        tmp_35_reg_1843[12 : 1] <= tmp_35_fu_638_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        parameters_load_3_reg_1896 <= parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        parameters_load_8_reg_1867 <= parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        parameters_load_reg_1886 <= parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st138_fsm_137) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        reg_524 <= parameters_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        reg_530 <= grp_fu_475_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46) | (ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) | (ap_const_logic_1 == ap_sig_cseq_ST_st86_fsm_85) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st104_fsm_103) | (ap_const_logic_1 == ap_sig_cseq_ST_st115_fsm_114) | (ap_const_logic_1 == ap_sig_cseq_ST_st120_fsm_119) | (ap_const_logic_1 == ap_sig_cseq_ST_st128_fsm_127) | (ap_const_logic_1 == ap_sig_cseq_ST_st135_fsm_134) | (ap_const_logic_1 == ap_sig_cseq_ST_st145_fsm_144))) begin
        reg_538 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        reg_549 <= grp_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22))) begin
        reg_554 <= grp_fu_507_p1;
        reg_559 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        reg_564 <= grp_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        reg_572 <= matchsum_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89) | (ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) | (ap_const_logic_1 == ap_sig_cseq_ST_st99_fsm_98) | (ap_const_logic_1 == ap_sig_cseq_ST_st110_fsm_109))) begin
        reg_576 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        tmp_106_reg_2100 <= tmp_106_fu_1560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_139)) begin
        tmp_114_reg_2160 <= tmp_114_fu_1689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & (ap_const_lv1_0 == tmp_81_fu_1701_p2))) begin
        tmp_132_reg_2173 <= tmp_132_fu_1713_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        tmp_31_reg_1811[12 : 1] <= tmp_31_fu_606_p2[12 : 1];
        tmp_32_reg_1822[12 : 1] <= tmp_32_fu_612_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp_33_reg_1943 <= tmp_33_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (tmp_90_fu_1433_p2 == ap_const_lv1_0))) begin
        tmp_75_reg_2081 <= tmp_75_fu_1494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) & (ap_const_lv1_0 == tmp_106_fu_1560_p2))) begin
        tmp_83_reg_2104 <= grp_fu_510_p2;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_24) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        F_ce0 = ap_const_logic_1;
    end else begin
        F_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_24) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        F_ce1 = ap_const_logic_1;
    end else begin
        F_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_24) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        F_we0 = ap_const_logic_1;
    end else begin
        F_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_24) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        F_we1 = ap_const_logic_1;
    end else begin
        F_we1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st22_fsm_21 or tmp_40_fu_1602_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        akt_address0 = ap_const_lv1_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        akt_address0 = tmp_40_fu_1602_p1;
    end else begin
        akt_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st22_fsm_21) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        akt_ce0 = ap_const_logic_1;
    end else begin
        akt_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st22_fsm_21) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        akt_ce1 = ap_const_logic_1;
    end else begin
        akt_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st22_fsm_21) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        akt_we0 = ap_const_logic_1;
    end else begin
        akt_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st22_fsm_21) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        akt_we1 = ap_const_logic_1;
    end else begin
        akt_we1 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st146_fsm_145) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st146_fsm_145) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (p_0_phi_fu_435_p4 or ap_sig_cseq_ST_st146_fsm_145 or ap_return_preg) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        ap_return = p_0_phi_fu_435_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (ap_sig_bdd_1097) begin
    if (ap_sig_bdd_1097) begin
        ap_sig_cseq_ST_st100_fsm_99 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_99 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_405) begin
    if (ap_sig_bdd_405) begin
        ap_sig_cseq_ST_st104_fsm_103 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st104_fsm_103 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_953) begin
    if (ap_sig_bdd_953) begin
        ap_sig_cseq_ST_st105_fsm_104 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st105_fsm_104 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_962) begin
    if (ap_sig_bdd_962) begin
        ap_sig_cseq_ST_st106_fsm_105 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st106_fsm_105 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_282) begin
    if (ap_sig_bdd_282) begin
        ap_sig_cseq_ST_st107_fsm_106 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st107_fsm_106 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_607) begin
    if (ap_sig_bdd_607) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_533) begin
    if (ap_sig_bdd_533) begin
        ap_sig_cseq_ST_st110_fsm_109 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_109 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1105) begin
    if (ap_sig_bdd_1105) begin
        ap_sig_cseq_ST_st111_fsm_110 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st111_fsm_110 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_413) begin
    if (ap_sig_bdd_413) begin
        ap_sig_cseq_ST_st115_fsm_114 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st115_fsm_114 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1113) begin
    if (ap_sig_bdd_1113) begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st116_fsm_115 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1057) begin
    if (ap_sig_bdd_1057) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_421) begin
    if (ap_sig_bdd_421) begin
        ap_sig_cseq_ST_st120_fsm_119 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st120_fsm_119 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_970) begin
    if (ap_sig_bdd_970) begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st121_fsm_120 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_979) begin
    if (ap_sig_bdd_979) begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st122_fsm_121 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_290) begin
    if (ap_sig_bdd_290) begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st123_fsm_122 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1120) begin
    if (ap_sig_bdd_1120) begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st124_fsm_123 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_429) begin
    if (ap_sig_bdd_429) begin
        ap_sig_cseq_ST_st128_fsm_127 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st128_fsm_127 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_988) begin
    if (ap_sig_bdd_988) begin
        ap_sig_cseq_ST_st129_fsm_128 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st129_fsm_128 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_298) begin
    if (ap_sig_bdd_298) begin
        ap_sig_cseq_ST_st130_fsm_129 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st130_fsm_129 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1128) begin
    if (ap_sig_bdd_1128) begin
        ap_sig_cseq_ST_st131_fsm_130 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st131_fsm_130 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_437) begin
    if (ap_sig_bdd_437) begin
        ap_sig_cseq_ST_st135_fsm_134 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st135_fsm_134 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1023) begin
    if (ap_sig_bdd_1023) begin
        ap_sig_cseq_ST_st136_fsm_135 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st136_fsm_135 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_999) begin
    if (ap_sig_bdd_999) begin
        ap_sig_cseq_ST_st137_fsm_136 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st137_fsm_136 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_305) begin
    if (ap_sig_bdd_305) begin
        ap_sig_cseq_ST_st138_fsm_137 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st138_fsm_137 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_773) begin
    if (ap_sig_bdd_773) begin
        ap_sig_cseq_ST_st139_fsm_138 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st139_fsm_138 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_342) begin
    if (ap_sig_bdd_342) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_786) begin
    if (ap_sig_bdd_786) begin
        ap_sig_cseq_ST_st140_fsm_139 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st140_fsm_139 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_795) begin
    if (ap_sig_bdd_795) begin
        ap_sig_cseq_ST_st141_fsm_140 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st141_fsm_140 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_896) begin
    if (ap_sig_bdd_896) begin
        ap_sig_cseq_ST_st142_fsm_141 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st142_fsm_141 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_445) begin
    if (ap_sig_bdd_445) begin
        ap_sig_cseq_ST_st145_fsm_144 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st145_fsm_144 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_850) begin
    if (ap_sig_bdd_850) begin
        ap_sig_cseq_ST_st146_fsm_145 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st146_fsm_145 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_455) begin
    if (ap_sig_bdd_455) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_349) begin
    if (ap_sig_bdd_349) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_462) begin
    if (ap_sig_bdd_462) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_628) begin
    if (ap_sig_bdd_628) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1187) begin
    if (ap_sig_bdd_1187) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_164) begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_472) begin
    if (ap_sig_bdd_472) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_640) begin
    if (ap_sig_bdd_640) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_479) begin
    if (ap_sig_bdd_479) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_669) begin
    if (ap_sig_bdd_669) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_689) begin
    if (ap_sig_bdd_689) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_813) begin
    if (ap_sig_bdd_813) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_500) begin
    if (ap_sig_bdd_500) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_250) begin
    if (ap_sig_bdd_250) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_713) begin
    if (ap_sig_bdd_713) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_243) begin
    if (ap_sig_bdd_243) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_357) begin
    if (ap_sig_bdd_357) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_331) begin
    if (ap_sig_bdd_331) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_832) begin
    if (ap_sig_bdd_832) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_507) begin
    if (ap_sig_bdd_507) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_722) begin
    if (ap_sig_bdd_722) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_554) begin
    if (ap_sig_bdd_554) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_922) begin
    if (ap_sig_bdd_922) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_258) begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1065) begin
    if (ap_sig_bdd_1065) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_365) begin
    if (ap_sig_bdd_365) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_825) begin
    if (ap_sig_bdd_825) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_733) begin
    if (ap_sig_bdd_733) begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_314) begin
    if (ap_sig_bdd_314) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_568) begin
    if (ap_sig_bdd_568) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_491) begin
    if (ap_sig_bdd_491) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_860) begin
    if (ap_sig_bdd_860) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_746) begin
    if (ap_sig_bdd_746) begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_266) begin
    if (ap_sig_bdd_266) begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1073) begin
    if (ap_sig_bdd_1073) begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_578) begin
    if (ap_sig_bdd_578) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_373) begin
    if (ap_sig_bdd_373) begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_764) begin
    if (ap_sig_bdd_764) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_517) begin
    if (ap_sig_bdd_517) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1081) begin
    if (ap_sig_bdd_1081) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_587) begin
    if (ap_sig_bdd_587) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_381) begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_936) begin
    if (ap_sig_bdd_936) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_389) begin
    if (ap_sig_bdd_389) begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_85 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1146) begin
    if (ap_sig_bdd_1146) begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_945) begin
    if (ap_sig_bdd_945) begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_324) begin
    if (ap_sig_bdd_324) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_274) begin
    if (ap_sig_bdd_274) begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1090) begin
    if (ap_sig_bdd_1090) begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_397) begin
    if (ap_sig_bdd_397) begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_1153) begin
    if (ap_sig_bdd_1153) begin
        ap_sig_cseq_ST_st96_fsm_95 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st96_fsm_95 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_525) begin
    if (ap_sig_bdd_525) begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_599) begin
    if (ap_sig_bdd_599) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st22_fsm_21 or back_gauss_addr_reg_1964 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st141_fsm_140 or tmp_60_fu_1026_p1 or tmp_74_fu_1223_p3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        back_gauss_address0 = back_gauss_addr_reg_1964;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        back_gauss_address0 = tmp_74_fu_1223_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        back_gauss_address0 = tmp_60_fu_1026_p1;
    end else begin
        back_gauss_address0 = 'bx;
    end
end

always @ (back_gauss_addr_1_reg_2014 or ap_sig_cseq_ST_st141_fsm_140 or ap_sig_cseq_ST_st146_fsm_145 or tmp_129_fu_1738_p1 or ap_sig_cseq_ST_st142_fsm_141 or tmp_130_cast_fu_1801_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        back_gauss_address1 = tmp_130_cast_fu_1801_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141)) begin
        back_gauss_address1 = tmp_129_fu_1738_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        back_gauss_address1 = back_gauss_addr_1_reg_2014;
    end else begin
        back_gauss_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st141_fsm_140) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140))) begin
        back_gauss_ce0 = ap_const_logic_1;
    end else begin
        back_gauss_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st141_fsm_140 or ap_sig_cseq_ST_st146_fsm_145 or ap_sig_cseq_ST_st142_fsm_141) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) | (ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145) | (ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141))) begin
        back_gauss_ce1 = ap_const_logic_1;
    end else begin
        back_gauss_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st141_fsm_140 or ap_sig_cseq_ST_st146_fsm_145 or ap_sig_cseq_ST_st142_fsm_141) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145) | (ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141))) begin
        back_gauss_d1 = ap_const_lv1_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        back_gauss_d1 = ap_const_lv1_0;
    end else begin
        back_gauss_d1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st141_fsm_140 or tmp_81_fu_1701_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & (ap_const_lv1_0 == tmp_81_fu_1701_p2))) begin
        back_gauss_we0 = ap_const_logic_1;
    end else begin
        back_gauss_we0 = ap_const_logic_0;
    end
end

always @ (tmp_90_reg_2057 or ap_sig_cseq_ST_st141_fsm_140 or tmp_81_fu_1701_p2 or ap_sig_cseq_ST_st146_fsm_145 or ap_sig_cseq_ST_st142_fsm_141 or tmp_119_fu_1779_p2) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & (ap_const_lv1_0 == tmp_81_fu_1701_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st142_fsm_141) | ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145) & ~(tmp_90_reg_2057 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_119_fu_1779_p2)))) begin
        back_gauss_we1 = ap_const_logic_1;
    end else begin
        back_gauss_we1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st141_fsm_140 or tmp_81_fu_1701_p2 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st68_fsm_67 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st91_fsm_90 or ap_sig_cseq_ST_st100_fsm_99 or ap_sig_cseq_ST_st111_fsm_110 or ap_sig_cseq_ST_st116_fsm_115 or ap_sig_cseq_ST_st124_fsm_123 or ap_sig_cseq_ST_st131_fsm_130) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90) | (ap_const_logic_1 == ap_sig_cseq_ST_st111_fsm_110) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) | (ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_130))) begin
        grp_fu_443_opcode = ap_const_lv2_1;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140) & (ap_const_lv1_0 == tmp_81_fu_1701_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_115))) begin
        grp_fu_443_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_443_opcode = 'bx;
    end
end

always @ (reg_514 or reg_530 or reg_538 or reg_576 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st141_fsm_140 or sorted_weight_0_2_fu_1717_p3 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st68_fsm_67 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st91_fsm_90 or ap_sig_cseq_ST_st100_fsm_99 or ap_sig_cseq_ST_st111_fsm_110 or ap_sig_cseq_ST_st116_fsm_115 or ap_sig_cseq_ST_st124_fsm_123 or ap_sig_cseq_ST_st131_fsm_130) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        grp_fu_443_p0 = sorted_weight_0_2_fu_1717_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_115)) begin
        grp_fu_443_p0 = reg_538;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90)) begin
        grp_fu_443_p0 = reg_576;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st111_fsm_110) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) | (ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_130))) begin
        grp_fu_443_p0 = reg_514;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67))) begin
        grp_fu_443_p0 = reg_530;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (alpha_w or reg_514 or reg_538 or reg_576 or parameters_load_reg_1886 or ap_sig_cseq_ST_st9_fsm_8 or parameters_load_3_reg_1896 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st141_fsm_140 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st68_fsm_67 or ap_sig_cseq_ST_st77_fsm_76 or ap_sig_cseq_ST_st91_fsm_90 or ap_sig_cseq_ST_st100_fsm_99 or ap_sig_cseq_ST_st111_fsm_110 or ap_sig_cseq_ST_st116_fsm_115 or ap_sig_cseq_ST_st124_fsm_123 or ap_sig_cseq_ST_st131_fsm_130) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st141_fsm_140)) begin
        grp_fu_443_p1 = ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        grp_fu_443_p1 = reg_538;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76) | (ap_const_logic_1 == ap_sig_cseq_ST_st100_fsm_99) | (ap_const_logic_1 == ap_sig_cseq_ST_st111_fsm_110))) begin
        grp_fu_443_p1 = reg_576;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st68_fsm_67) | (ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90))) begin
        grp_fu_443_p1 = reg_514;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | (ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st116_fsm_115) | (ap_const_logic_1 == ap_sig_cseq_ST_st124_fsm_123) | (ap_const_logic_1 == ap_sig_cseq_ST_st131_fsm_130))) begin
        grp_fu_443_p1 = alpha_w;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_443_p1 = parameters_load_3_reg_1896;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        grp_fu_443_p1 = parameters_load_reg_1886;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (alpha_w or akt_q0 or ap_sig_cseq_ST_st107_fsm_106 or reg_538 or akt_load_reg_2138 or ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st87_fsm_86 or ap_sig_cseq_ST_st96_fsm_95) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_106)) begin
        grp_fu_453_p0 = alpha_w;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_95)) begin
        grp_fu_453_p0 = akt_load_reg_2138;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86)) begin
        grp_fu_453_p0 = reg_538;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        grp_fu_453_p0 = akt_q0;
    end else begin
        grp_fu_453_p0 = 'bx;
    end
end

always @ (parameters_q0 or ap_sig_cseq_ST_st107_fsm_106 or reg_538 or ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st87_fsm_86 or ap_sig_cseq_ST_st96_fsm_95) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st107_fsm_106)) begin
        grp_fu_453_p1 = parameters_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st87_fsm_86) | (ap_const_logic_1 == ap_sig_cseq_ST_st96_fsm_95))) begin
        grp_fu_453_p1 = reg_538;
    end else begin
        grp_fu_453_p1 = 'bx;
    end
end

always @ (alpha_w or parameters_load_2_reg_1855 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st49_fsm_48) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_459_p0 = ap_const_lv32_3F800000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_459_p0 = alpha_w;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_459_p0 = parameters_load_2_reg_1855;
    end else begin
        grp_fu_459_p0 = 'bx;
    end
end

always @ (reg_514 or parameters_load_2_reg_1855 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st49_fsm_48 or matchsumtot_1_1_reg_387) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_459_p1 = matchsumtot_1_1_reg_387;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_459_p1 = parameters_load_2_reg_1855;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_459_p1 = reg_514;
    end else begin
        grp_fu_459_p1 = 'bx;
    end
end

always @ (tmp_s_fu_623_p1 or ap_sig_cseq_ST_st3_fsm_2 or tmp_88_fu_1514_p1 or ap_sig_cseq_ST_st29_fsm_28 or tmp_112_1_fu_1519_p1 or ap_sig_cseq_ST_st37_fsm_36) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_475_p0 = tmp_112_1_fu_1519_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_475_p0 = tmp_88_fu_1514_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_475_p0 = tmp_s_fu_623_p1;
    end else begin
        grp_fu_475_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st24_fsm_23 or tmp_90_reg_2057 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st140_fsm_139 or ap_sig_cseq_ST_st146_fsm_145) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145) & ~(tmp_90_reg_2057 == ap_const_lv1_0))) begin
        grp_fu_481_opcode = ap_const_lv5_3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_481_opcode = ap_const_lv5_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_481_opcode = ap_const_lv5_4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_139))) begin
        grp_fu_481_opcode = ap_const_lv5_2;
    end else begin
        grp_fu_481_opcode = 'bx;
    end
end

always @ (reg_538 or ap_sig_cseq_ST_st23_fsm_22 or reg_564 or ap_sig_cseq_ST_st22_fsm_21 or sorted_F_1_2_reg_1974 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st140_fsm_139 or matchsumtot_1_1_reg_387 or ap_sig_cseq_ST_st146_fsm_145) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        grp_fu_481_p0 = reg_538;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        grp_fu_481_p0 = matchsumtot_1_1_reg_387;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_139))) begin
        grp_fu_481_p0 = sorted_F_1_2_reg_1974;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_481_p0 = reg_564;
    end else begin
        grp_fu_481_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st49_fsm_48 or sorted_F_1_42_reg_2153 or ap_sig_cseq_ST_st140_fsm_139 or ap_sig_cseq_ST_st146_fsm_145 or sorted_F_0_1_fu_1174_p3 or sorted_F_0_s_fu_1317_p3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145)) begin
        grp_fu_481_p1 = ap_const_lv32_3F333333;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st140_fsm_139)) begin
        grp_fu_481_p1 = sorted_F_1_42_reg_2153;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_481_p1 = sorted_F_0_s_fu_1317_p3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        grp_fu_481_p1 = sorted_F_0_1_fu_1174_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        grp_fu_481_p1 = ap_const_lv32_0;
    end else begin
        grp_fu_481_p1 = 'bx;
    end
end

always @ (reg_514 or reg_524 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_493_p1 = reg_524;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_493_p1 = reg_514;
    end else begin
        grp_fu_493_p1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st16_fsm_15 or tmp_53_reg_1917 or tmp_59_1_reg_1938 or ap_sig_cseq_ST_st18_fsm_17) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_498_p0 = tmp_59_1_reg_1938;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_498_p0 = tmp_53_reg_1917;
    end else begin
        grp_fu_498_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st16_fsm_15 or abs_reg_1912 or abs_1_reg_1933 or ap_sig_cseq_ST_st18_fsm_17) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        grp_fu_507_p0 = abs_1_reg_1933;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_507_p0 = abs_reg_1912;
    end else begin
        grp_fu_507_p0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st72_fsm_71 or matchsum_addr_3_reg_1959 or matchsum_addr_4_reg_2009 or ap_sig_cseq_ST_st25_fsm_24 or matchsum_addr_reg_2124 or ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st35_fsm_34 or tmp_127_cast_fu_1489_p1 or tmp_126_cast_fu_1614_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        matchsum_address0 = matchsum_addr_reg_2124;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        matchsum_address0 = tmp_127_cast_fu_1489_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        matchsum_address0 = tmp_126_cast_fu_1614_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        matchsum_address0 = matchsum_addr_4_reg_2009;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        matchsum_address0 = matchsum_addr_3_reg_1959;
    end else begin
        matchsum_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st72_fsm_71 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st73_fsm_72 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st35_fsm_34) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st72_fsm_71) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        matchsum_ce0 = ap_const_logic_1;
    end else begin
        matchsum_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st73_fsm_72 or tmp_65_fu_1624_p2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        matchsum_d0 = tmp_65_fu_1624_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        matchsum_d0 = ap_const_lv8_1;
    end else begin
        matchsum_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_24 or tmp_90_fu_1433_p2 or ap_sig_cseq_ST_st73_fsm_72) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (tmp_90_fu_1433_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72))) begin
        matchsum_we0 = ap_const_logic_1;
    end else begin
        matchsum_we0 = ap_const_logic_0;
    end
end

always @ (tmp_90_reg_2057 or p_0_reg_431 or ap_sig_cseq_ST_st146_fsm_145) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st146_fsm_145) & ~(tmp_90_reg_2057 == ap_const_lv1_0))) begin
        p_0_phi_fu_435_p4 = ap_const_lv1_0;
    end else begin
        p_0_phi_fu_435_p4 = p_0_reg_431;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st3_fsm_2 or parameters_addr_9_reg_1849 or ap_sig_cseq_ST_st5_fsm_4 or parameters_addr_12_reg_1861 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st49_fsm_48 or parameters_addr_13_reg_2109 or ap_sig_cseq_ST_st66_fsm_65 or parameters_addr_14_reg_2114 or parameters_addr_15_reg_2119 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st65_fsm_64 or tmp_52_fu_618_p1 or tmp_57_1_fu_633_p1 or tmp_55_fu_643_p1 or tmp_66_1_fu_653_p1 or tmp_36_fu_658_p1 or tmp_52_1_fu_677_p1 or tmp_71_fu_1474_p1 or tmp_73_fu_1509_p1 or tmp_86_fu_1566_p1 or tmp_84_fu_1571_p1 or tmp_39_fu_1579_p1 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st89_fsm_88 or ap_sig_cseq_ST_st105_fsm_104 or ap_sig_cseq_ST_st106_fsm_105 or ap_sig_cseq_ST_st121_fsm_120 or ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st129_fsm_128 or ap_sig_cseq_ST_st137_fsm_136) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        parameters_address0 = parameters_addr_13_reg_2109;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        parameters_address0 = tmp_84_fu_1571_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        parameters_address0 = tmp_86_fu_1566_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        parameters_address0 = tmp_73_fu_1509_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        parameters_address0 = tmp_71_fu_1474_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st106_fsm_105) | (ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120))) begin
        parameters_address0 = parameters_addr_15_reg_2119;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88) | (ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104))) begin
        parameters_address0 = parameters_addr_14_reg_2114;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        parameters_address0 = tmp_39_fu_1579_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_136))) begin
        parameters_address0 = parameters_addr_12_reg_1861;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_128))) begin
        parameters_address0 = parameters_addr_9_reg_1849;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        parameters_address0 = tmp_52_1_fu_677_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        parameters_address0 = tmp_36_fu_658_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        parameters_address0 = tmp_66_1_fu_653_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        parameters_address0 = tmp_55_fu_643_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        parameters_address0 = tmp_57_1_fu_633_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        parameters_address0 = tmp_52_fu_618_p1;
    end else begin
        parameters_address0 = 'bx;
    end
end

always @ (parameters_addr_9_reg_1849 or parameters_addr_12_reg_1861 or ap_sig_cseq_ST_st129_fsm_128 or ap_sig_cseq_ST_st137_fsm_136 or ap_sig_cseq_ST_st136_fsm_135) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_136)) begin
        parameters_address1 = parameters_addr_9_reg_1849;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_128) | (ap_const_logic_1 == ap_sig_cseq_ST_st136_fsm_135))) begin
        parameters_address1 = parameters_addr_12_reg_1861;
    end else begin
        parameters_address1 = 'bx;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st66_fsm_65 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st41_fsm_40 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st89_fsm_88 or ap_sig_cseq_ST_st105_fsm_104 or ap_sig_cseq_ST_st106_fsm_105 or ap_sig_cseq_ST_st121_fsm_120 or ap_sig_cseq_ST_st122_fsm_121 or ap_sig_cseq_ST_st129_fsm_128 or ap_sig_cseq_ST_st137_fsm_136) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) | (ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st89_fsm_88) | (ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104) | (ap_const_logic_1 == ap_sig_cseq_ST_st106_fsm_105) | (ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120) | (ap_const_logic_1 == ap_sig_cseq_ST_st122_fsm_121) | (ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_128) | (ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_136))) begin
        parameters_ce0 = ap_const_logic_1;
    end else begin
        parameters_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st129_fsm_128 or ap_sig_cseq_ST_st137_fsm_136 or ap_sig_cseq_ST_st136_fsm_135) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_128) | (ap_const_logic_1 == ap_sig_cseq_ST_st137_fsm_136) | (ap_const_logic_1 == ap_sig_cseq_ST_st136_fsm_135))) begin
        parameters_ce1 = ap_const_logic_1;
    end else begin
        parameters_ce1 = ap_const_logic_0;
    end
end

always @ (vinit or reg_530 or ap_sig_cseq_ST_st34_fsm_33 or reg_538 or reg_564 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st49_fsm_48 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st105_fsm_104 or ap_sig_cseq_ST_st121_fsm_120 or ap_sig_cseq_ST_st129_fsm_128) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        parameters_d0 = reg_564;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        parameters_d0 = ap_const_lv32_3E4CCCCD;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104) | (ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120) | (ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_128))) begin
        parameters_d0 = reg_538;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        parameters_d0 = vinit;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        parameters_d0 = reg_530;
    end else begin
        parameters_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st34_fsm_33 or ap_sig_cseq_ST_st25_fsm_24 or tmp_90_fu_1433_p2 or tmp_106_fu_1560_p2 or tmp_106_reg_2100 or ap_sig_cseq_ST_st49_fsm_48 or tmp_69_reg_2134 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st48_fsm_47 or ap_sig_cseq_ST_st65_fsm_64 or ap_sig_cseq_ST_st82_fsm_81 or ap_sig_cseq_ST_st105_fsm_104 or ap_sig_cseq_ST_st121_fsm_120 or ap_sig_cseq_ST_st129_fsm_128) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33) | ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) & (tmp_90_fu_1433_p2 == ap_const_lv1_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47) | ((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_48) & ~(ap_const_lv1_0 == tmp_106_fu_1560_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st65_fsm_64) & (ap_const_lv1_0 == tmp_106_reg_2100)) | (ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) | (ap_const_logic_1 == ap_sig_cseq_ST_st105_fsm_104) | (ap_const_logic_1 == ap_sig_cseq_ST_st121_fsm_120) | ((ap_const_logic_1 == ap_sig_cseq_ST_st129_fsm_128) & (ap_const_lv1_0 == tmp_69_reg_2134)))) begin
        parameters_we0 = ap_const_logic_1;
    end else begin
        parameters_we0 = ap_const_logic_0;
    end
end

always @ (or_cond_reg_2053 or ap_sig_cseq_ST_st136_fsm_135) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st136_fsm_135) & (or_cond_reg_2053 == ap_const_lv1_0))) begin
        parameters_we1 = ap_const_logic_1;
    end else begin
        parameters_we1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_99_reg_2041 or or_cond_reg_2053 or tmp_90_fu_1433_p2 or tmp_75_reg_2081 or tmp_106_fu_1560_p2 or tmp_69_reg_2134 or tmp_81_fu_1701_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            if (~(tmp_90_fu_1433_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st66_fsm_65;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st26_fsm_25 : 
        begin
            if (~(tmp_75_reg_2081 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end else begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            if (~(tmp_99_reg_2041 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st49_fsm_48;
            end else begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            if (~(ap_const_lv1_0 == tmp_106_fu_1560_p2)) begin
                ap_NS_fsm = ap_ST_st65_fsm_64;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st146_fsm_145;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : 
        begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : 
        begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : 
        begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : 
        begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : 
        begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : 
        begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : 
        begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : 
        begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : 
        begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : 
        begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : 
        begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : 
        begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : 
        begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : 
        begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : 
        begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : 
        begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : 
        begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : 
        begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : 
        begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : 
        begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : 
        begin
            ap_NS_fsm = ap_ST_st115_fsm_114;
        end
        ap_ST_st115_fsm_114 : 
        begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : 
        begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : 
        begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : 
        begin
            ap_NS_fsm = ap_ST_st119_fsm_118;
        end
        ap_ST_st119_fsm_118 : 
        begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : 
        begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : 
        begin
            if (~(ap_const_lv1_0 == tmp_69_reg_2134)) begin
                ap_NS_fsm = ap_ST_st129_fsm_128;
            end else begin
                ap_NS_fsm = ap_ST_st122_fsm_121;
            end
        end
        ap_ST_st122_fsm_121 : 
        begin
            ap_NS_fsm = ap_ST_st123_fsm_122;
        end
        ap_ST_st123_fsm_122 : 
        begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : 
        begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : 
        begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : 
        begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : 
        begin
            ap_NS_fsm = ap_ST_st128_fsm_127;
        end
        ap_ST_st128_fsm_127 : 
        begin
            ap_NS_fsm = ap_ST_st129_fsm_128;
        end
        ap_ST_st129_fsm_128 : 
        begin
            if (~(or_cond_reg_2053 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st136_fsm_135;
            end else begin
                ap_NS_fsm = ap_ST_st130_fsm_129;
            end
        end
        ap_ST_st130_fsm_129 : 
        begin
            ap_NS_fsm = ap_ST_st131_fsm_130;
        end
        ap_ST_st131_fsm_130 : 
        begin
            ap_NS_fsm = ap_ST_st132_fsm_131;
        end
        ap_ST_st132_fsm_131 : 
        begin
            ap_NS_fsm = ap_ST_st133_fsm_132;
        end
        ap_ST_st133_fsm_132 : 
        begin
            ap_NS_fsm = ap_ST_st134_fsm_133;
        end
        ap_ST_st134_fsm_133 : 
        begin
            ap_NS_fsm = ap_ST_st135_fsm_134;
        end
        ap_ST_st135_fsm_134 : 
        begin
            ap_NS_fsm = ap_ST_st136_fsm_135;
        end
        ap_ST_st136_fsm_135 : 
        begin
            ap_NS_fsm = ap_ST_st137_fsm_136;
        end
        ap_ST_st137_fsm_136 : 
        begin
            ap_NS_fsm = ap_ST_st138_fsm_137;
        end
        ap_ST_st138_fsm_137 : 
        begin
            ap_NS_fsm = ap_ST_st139_fsm_138;
        end
        ap_ST_st139_fsm_138 : 
        begin
            ap_NS_fsm = ap_ST_st140_fsm_139;
        end
        ap_ST_st140_fsm_139 : 
        begin
            ap_NS_fsm = ap_ST_st141_fsm_140;
        end
        ap_ST_st141_fsm_140 : 
        begin
            if (~(ap_const_lv1_0 == tmp_81_fu_1701_p2)) begin
                ap_NS_fsm = ap_ST_st139_fsm_138;
            end else begin
                ap_NS_fsm = ap_ST_st142_fsm_141;
            end
        end
        ap_ST_st142_fsm_141 : 
        begin
            ap_NS_fsm = ap_ST_st143_fsm_142;
        end
        ap_ST_st143_fsm_142 : 
        begin
            ap_NS_fsm = ap_ST_st144_fsm_143;
        end
        ap_ST_st144_fsm_143 : 
        begin
            ap_NS_fsm = ap_ST_st145_fsm_144;
        end
        ap_ST_st145_fsm_144 : 
        begin
            ap_NS_fsm = ap_ST_st146_fsm_145;
        end
        ap_ST_st146_fsm_145 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign B_1_to_int_fu_1743_p1 = reg_538;

assign F_address0 = ap_const_lv1_0;

assign F_address1 = ap_const_lv1_1;

assign F_d0 = reg_564;

assign F_d1 = sorted_F_1_2_reg_1974;

assign abs_1_fu_992_p3 = ((abscond_1_fu_986_p2[0:0] === 1'b1) ? p_Val2_11_fu_974_p3 : neg_1_fu_980_p2);

assign abs_fu_833_p3 = ((abscond_fu_827_p2[0:0] === 1'b1) ? p_Val2_5_fu_815_p3 : neg_fu_821_p2);

assign abscond_1_fu_986_p2 = ($signed(p_Val2_11_fu_974_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);

assign abscond_fu_827_p2 = ($signed(p_Val2_5_fu_815_p3) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);

assign akt_address1 = ap_const_lv1_1;

assign akt_d0 = grp_fu_459_p2;

assign akt_d1 = grp_fu_464_p2;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1023 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_87]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1057 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1065 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1073 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_43]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1081 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1090 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1097 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_63]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1113 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_73]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_82]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1146 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_56]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_1187 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_164 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_243 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_250 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_266 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_42]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_274 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_282 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_290 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_298 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_81]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_305 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_89]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_314 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_324 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_331 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_342 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_349 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_357 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_365 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_373 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_47]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_389 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_55]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_397 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_405 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_67]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_413 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_72]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_421 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_77]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_429 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_437 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_86]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_445 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_90]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_455 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_462 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_472 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_479 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_491 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_500 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_507 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_517 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_525 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_62]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_533 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_554 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_568 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_578 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_587 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_599 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_607 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_628 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_640 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_669 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_689 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_713 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_722 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_733 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_30]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_746 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_764 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_773 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_786 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_795 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_813 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_825 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_832 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_850 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_91]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_860 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_896 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_922 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_936 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_945 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_58]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_953 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_68]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_962 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_69]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_970 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_78]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_979 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_79]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_988 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_80]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_999 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_88]);
end

assign back_gauss_d0 = ap_const_lv1_0;

assign grp_fu_443_ce = ap_const_logic_1;

assign grp_fu_447_ce = ap_const_logic_1;

assign grp_fu_453_ce = ap_const_logic_1;

assign grp_fu_459_ce = ap_const_logic_1;

assign grp_fu_464_ce = ap_const_logic_1;

assign grp_fu_469_ce = ap_const_logic_1;

assign grp_fu_475_ce = ap_const_logic_1;

assign grp_fu_493_ce = ap_const_logic_1;

assign grp_fu_498_ce = ap_const_logic_1;

assign grp_fu_503_opcode = ap_const_lv5_4;

assign grp_fu_507_ce = ap_const_logic_1;

assign grp_fu_510_p2 = (min_val_1_1_cast3_reg_2075 + tmp_35_reg_1843);

assign index_1_fu_1706_p3 = ((tmp_127_reg_2148[0:0] === 1'b1) ? index_1_1_reg_419 : ap_const_lv32_0);

assign isNeg_1_fu_889_p3 = sh_assign_2_fu_883_p2[ap_const_lv32_8];

assign isNeg_fu_730_p3 = sh_assign_fu_724_p2[ap_const_lv32_8];

assign j5_fu_1631_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(j5_0_in_reg_407));

assign loc_V_1_fu_704_p1 = p_Val2_s_fu_682_p1[22:0];

assign loc_V_2_fu_853_p4 = {{p_Val2_6_fu_841_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign loc_V_3_fu_863_p1 = p_Val2_6_fu_841_p1[22:0];

assign loc_V_fu_694_p4 = {{p_Val2_s_fu_682_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign matchsumtot_1_1_to_int_fu_1524_p1 = matchsumtot_1_1_reg_387;

assign max_val_2_1_cast5_fu_1446_p1 = max_val_2_1_fu_1438_p3;

assign max_val_2_1_fu_1438_p3 = ((tmp_90_fu_1433_p2[0:0] === 1'b1) ? p_cast_fu_1429_p1 : ap_const_lv4_A);

assign min_val_1_1_cast3_fu_1465_p1 = min_val_1_1_fu_1457_p3;

assign min_val_1_1_fu_1457_p3 = ((tmp_100_fu_1453_p2[0:0] === 1'b1) ? min_val_1_cast_fu_1450_p1 : ap_const_lv4_A);

assign min_val_1_cast_fu_1450_p1 = tmp_99_reg_2041;

assign neg_1_fu_980_p2 = (ap_const_lv32_0 - p_Val2_11_fu_974_p3);

assign neg_fu_821_p2 = (ap_const_lv32_0 - p_Val2_5_fu_815_p3);

assign not_j5_0_in_t_fu_1726_p2 = (tmp_132_reg_2173 ^ ap_const_lv1_1);

assign notlhs10_fu_1761_p2 = (tmp_115_fu_1747_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs1_fu_1086_p2 = (tmp_3_fu_1054_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notlhs2_fu_1269_p2 = (tmp_10_fu_1237_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notlhs3_fu_1287_p2 = (tmp_12_fu_1255_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notlhs4_fu_1134_p2 = (tmp_19_fu_1120_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs5_fu_1542_p2 = (tmp_101_fu_1528_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs6_fu_1360_p2 = (tmp_29_fu_1328_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs7_fu_1378_p2 = (tmp_59_fu_1346_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs8_fu_1666_p2 = (tmp_107_fu_1652_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs9_fu_1200_p2 = (tmp_91_fu_1186_p4 != ap_const_lv8_FF? 1'b1: 1'b0);

assign notlhs_fu_1068_p2 = (tmp_1_fu_1036_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);

assign notrhs10_fu_1767_p2 = (tmp_133_fu_1757_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs1_fu_1092_p2 = (tmp_103_fu_1064_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign notrhs2_fu_1275_p2 = (tmp_120_fu_1247_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign notrhs3_fu_1293_p2 = (tmp_121_fu_1265_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign notrhs4_fu_1140_p2 = (tmp_122_fu_1130_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs5_fu_1548_p2 = (tmp_126_fu_1538_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs6_fu_1366_p2 = (tmp_123_fu_1338_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs7_fu_1384_p2 = (tmp_124_fu_1356_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs8_fu_1672_p2 = (tmp_131_fu_1662_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs9_fu_1206_p2 = (tmp_125_fu_1196_p1 == ap_const_lv23_0? 1'b1: 1'b0);

assign notrhs_fu_1074_p2 = (tmp_102_fu_1046_p1 == ap_const_lv52_0? 1'b1: 1'b0);

assign or_cond1_fu_1168_p2 = (tmp_fu_1164_p2 & back_gauss_q0);

assign or_cond_fu_1423_p2 = (tmp1_fu_1418_p2 & back_gauss_q0);

assign p_Result_1_fu_708_p3 = {{ap_const_lv1_1}, {loc_V_1_fu_704_p1}};

assign p_Result_3_fu_867_p3 = {{ap_const_lv1_1}, {loc_V_3_fu_863_p1}};

assign p_Val2_11_fu_974_p3 = ((p_Result_2_reg_1922[0:0] === 1'b1) ? p_Val2_7_i_i1_fu_969_p2 : p_Val2_9_reg_1927);

assign p_Val2_3_fu_802_p3 = ((isNeg_fu_730_p3[0:0] === 1'b1) ? tmp_92_fu_788_p1 : tmp_93_fu_792_p4);

assign p_Val2_5_fu_815_p3 = ((p_Result_s_reg_1901[0:0] === 1'b1) ? p_Val2_7_i_i_fu_810_p2 : p_Val2_3_reg_1906);

assign p_Val2_6_fu_841_p1 = reg_538;

assign p_Val2_7_i_i1_fu_969_p2 = (ap_const_lv32_0 - p_Val2_9_reg_1927);

assign p_Val2_7_i_i_fu_810_p2 = (ap_const_lv32_0 - p_Val2_3_reg_1906);

assign p_Val2_9_fu_961_p3 = ((isNeg_1_fu_889_p3[0:0] === 1'b1) ? tmp_94_fu_947_p1 : tmp_108_fu_951_p4);

assign p_Val2_s_fu_682_p1 = reg_538;

assign p_cast_fu_1429_p1 = or_cond_fu_1423_p2;

assign p_shl2_cast_fu_602_p1 = p_shl2_fu_594_p3;

assign p_shl2_fu_594_p3 = {{pos_r}, {ap_const_lv1_0}};

assign p_shl_cast_fu_590_p1 = p_shl_fu_582_p3;

assign p_shl_fu_582_p3 = {{pos_r}, {ap_const_lv3_0}};

assign parameters_d1 = reg_538;

assign pos_cast_fu_1010_p1 = pos_r;

assign sh_assign_1_cast_cast_fu_760_p1 = $signed(sh_assign_1_fu_748_p3);

assign sh_assign_1_cast_fu_756_p1 = $signed(sh_assign_1_fu_748_p3);

assign sh_assign_1_fu_748_p3 = ((isNeg_fu_730_p3[0:0] === 1'b1) ? tmp_4_i_i_cast_fu_744_p1 : sh_assign_fu_724_p2);

assign sh_assign_2_fu_883_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i1_cast6_fu_879_p1));

assign sh_assign_3_cast_cast_fu_919_p1 = $signed(sh_assign_3_fu_907_p3);

assign sh_assign_3_cast_fu_915_p1 = $signed(sh_assign_3_fu_907_p3);

assign sh_assign_3_fu_907_p3 = ((isNeg_1_fu_889_p3[0:0] === 1'b1) ? tmp_4_i_i1_cast_fu_903_p1 : sh_assign_2_fu_883_p2);

assign sh_assign_fu_724_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast7_fu_720_p1));

assign sorted_F_0_1_fu_1174_p3 = ((tmp_28_reg_1987[0:0] === 1'b1) ? reg_564 : ap_const_lv32_447A0000);

assign sorted_F_0_1_to_int_fu_1182_p1 = sorted_F_0_1_fu_1174_p3;

assign sorted_F_0_s_fu_1317_p3 = ((or_cond1_reg_1993[0:0] === 1'b1) ? reg_564 : ap_const_lv32_0);

assign sorted_F_0_to_int_41_fu_1342_p1 = sorted_F_0_s_fu_1317_p3;

assign sorted_F_0_to_int_fu_1116_p1 = reg_564;

assign sorted_F_1_2_to_int_fu_1325_p1 = sorted_F_1_2_reg_1974;

assign sorted_F_1_42_fu_1641_p3 = ((tmp_127_fu_1637_p1[0:0] === 1'b1) ? sorted_F_1_reg_398 : reg_564);

assign sorted_F_1_to_int_fu_1649_p1 = sorted_F_1_42_reg_2153;

assign sorted_weight_0_2_fu_1717_p3 = ((tmp_132_fu_1713_p1[0:0] === 1'b1) ? reg_514 : reg_524);

assign tmp1_fu_1418_p2 = (tmp_18_reg_2020 & tmp_79_fu_1413_p2);

assign tmp_100_fu_1453_p2 = (tmp_99_reg_2041 | tmp_28_reg_1987);

assign tmp_101_fu_1528_p4 = {{matchsumtot_1_1_to_int_fu_1524_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_102_fu_1046_p1 = tmp_54_to_int_fu_1032_p1[51:0];

assign tmp_103_fu_1064_p1 = tmp_58_to_int_fu_1050_p1[51:0];

assign tmp_104_fu_1554_p2 = (notrhs5_fu_1548_p2 | notlhs5_fu_1542_p2);

assign tmp_106_fu_1560_p2 = (tmp_104_fu_1554_p2 & grp_fu_481_p2);

assign tmp_107_fu_1652_p4 = {{sorted_F_1_to_int_fu_1649_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_108_fu_951_p4 = {{tmp_9_i_i1_fu_933_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_109_fu_1609_p2 = (tmp_92_cast_reg_2047 + tmp_40_cast_fu_1606_p1);

assign tmp_10_fu_1237_p4 = {{tmp_55_1_to_int_fu_1233_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_110_fu_1483_p2 = (tmp_92_cast_fu_1406_p1 + tmp_74_cast_fu_1479_p1);

assign tmp_111_fu_1678_p2 = (notrhs8_fu_1672_p2 | notlhs8_fu_1666_p2);

assign tmp_112_1_fu_1519_p1 = reg_572;

assign tmp_112_fu_1684_p2 = (tmp_61_reg_2025 & tmp_111_fu_1678_p2);

assign tmp_114_fu_1689_p2 = (tmp_112_fu_1684_p2 & grp_fu_481_p2);

assign tmp_115_fu_1747_p4 = {{B_1_to_int_fu_1743_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_116_fu_939_p3 = tmp_7_i_i1_fu_927_p2[ap_const_lv32_17];

assign tmp_117_fu_1773_p2 = (notrhs10_fu_1767_p2 | notlhs10_fu_1761_p2);

assign tmp_119_fu_1779_p2 = (tmp_117_fu_1773_p2 & grp_fu_481_p2);

assign tmp_120_fu_1247_p1 = tmp_55_1_to_int_fu_1233_p1[51:0];

assign tmp_121_fu_1265_p1 = tmp_60_1_to_int_fu_1251_p1[51:0];

assign tmp_122_fu_1130_p1 = sorted_F_0_to_int_fu_1116_p1[22:0];

assign tmp_123_fu_1338_p1 = sorted_F_1_2_to_int_fu_1325_p1[22:0];

assign tmp_124_fu_1356_p1 = sorted_F_0_to_int_41_fu_1342_p1[22:0];

assign tmp_125_fu_1196_p1 = sorted_F_0_1_to_int_fu_1182_p1[22:0];

assign tmp_126_cast_fu_1614_p1 = tmp_109_fu_1609_p2;

assign tmp_126_fu_1538_p1 = matchsumtot_1_1_to_int_fu_1524_p1[22:0];

assign tmp_127_cast_fu_1489_p1 = tmp_110_fu_1483_p2;

assign tmp_127_fu_1637_p1 = j5_fu_1631_p2[0:0];

assign tmp_128_fu_1731_p3 = {{tmp_34_reg_1948}, {not_j5_0_in_t_fu_1726_p2}};

assign tmp_129_fu_1738_p1 = tmp_128_fu_1731_p3;

assign tmp_12_fu_1255_p4 = {{tmp_60_1_to_int_fu_1251_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_130_cast_fu_1801_p1 = $signed(tmp_130_fu_1796_p2);

assign tmp_130_fu_1796_p2 = (tmp_92_cast_reg_2047 + tmp_135_fu_1789_p3);

assign tmp_131_fu_1662_p1 = sorted_F_1_to_int_fu_1649_p1[22:0];

assign tmp_132_fu_1713_p1 = j5_0_in_reg_407[0:0];

assign tmp_133_fu_1757_p1 = B_1_to_int_fu_1743_p1[22:0];

assign tmp_134_fu_1785_p1 = index_1_1_reg_419[18:0];

assign tmp_135_fu_1789_p3 = ((tmp_132_reg_2173[0:0] === 1'b1) ? ap_const_lv19_1 : tmp_134_fu_1785_p1);

assign tmp_14_fu_1281_p2 = (notrhs2_fu_1275_p2 | notlhs2_fu_1269_p2);

assign tmp_15_fu_1299_p2 = (notrhs3_fu_1293_p2 | notlhs3_fu_1287_p2);

assign tmp_16_fu_1305_p2 = (tmp_14_fu_1281_p2 & tmp_15_fu_1299_p2);

assign tmp_18_fu_1311_p2 = (tmp_16_fu_1305_p2 & grp_fu_503_p2);

assign tmp_19_fu_1120_p4 = {{sorted_F_0_to_int_fu_1116_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_1_fu_1036_p4 = {{tmp_54_to_int_fu_1032_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_21_fu_1146_p2 = (notrhs4_fu_1140_p2 | notlhs4_fu_1134_p2);

assign tmp_23_fu_1152_p2 = (tmp_21_fu_1146_p2 & grp_fu_481_p2);

assign tmp_27_fu_486_opcode = ap_const_lv5_4;

assign tmp_28_fu_1158_p2 = (tmp_21_fu_1146_p2 & tmp_27_fu_486_p2);

assign tmp_29_fu_1328_p4 = {{sorted_F_1_2_to_int_fu_1325_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_2_i_i1_fu_875_p1 = p_Result_3_fu_867_p3;

assign tmp_2_i_i_fu_716_p1 = p_Result_1_fu_708_p3;

assign tmp_31_cast_fu_668_p1 = $signed(tmp_31_reg_1811);

assign tmp_31_fu_606_p2 = (p_shl_cast_fu_590_p1 - p_shl2_cast_fu_602_p1);

assign tmp_32_fu_612_p2 = (ap_const_lv13_2 + tmp_31_fu_606_p2);

assign tmp_33_fu_1004_p1 = tmp_33_fu_1004_p10;

assign tmp_33_fu_1004_p10 = x;

assign tmp_33_fu_1004_p2 = (ap_const_lv17_12C * tmp_33_fu_1004_p1);

assign tmp_34_fu_1013_p2 = (tmp_33_reg_1943 + pos_cast_fu_1010_p1);

assign tmp_35_fu_638_p2 = (ap_const_lv13_4 + tmp_31_reg_1811);

assign tmp_36_fu_658_p1 = $signed(tmp_31_reg_1811);

assign tmp_38_fu_1575_p2 = (max_val_2_1_cast5_reg_2068 + tmp_31_reg_1811);

assign tmp_39_fu_1579_p1 = $signed(tmp_38_fu_1575_p2);

assign tmp_3_fu_1054_p4 = {{tmp_58_to_int_fu_1050_p1[ap_const_lv32_3E : ap_const_lv32_34]}};

assign tmp_40_cast_fu_1606_p1 = max_val_2_1_reg_2061;

assign tmp_40_fu_1602_p1 = max_val_2_1_reg_2061;

assign tmp_44_fu_1584_p2 = (max_val_2_1_cast5_reg_2068 + tmp_32_reg_1822);

assign tmp_45_fu_1588_p1 = $signed(tmp_44_fu_1584_p2);

assign tmp_4_i_i1_cast_fu_903_p1 = $signed(tmp_4_i_i1_fu_897_p2);

assign tmp_4_i_i1_fu_897_p2 = (ap_const_lv8_7F - loc_V_2_fu_853_p4);

assign tmp_4_i_i_cast_fu_744_p1 = $signed(tmp_4_i_i_fu_738_p2);

assign tmp_4_i_i_fu_738_p2 = (ap_const_lv8_7F - loc_V_fu_694_p4);

assign tmp_51_fu_1593_p2 = (max_val_2_1_cast5_reg_2068 + tmp_35_reg_1843);

assign tmp_51_s_fu_671_p2 = (tmp_31_cast_fu_668_p1 | ap_const_lv32_1);

assign tmp_52_1_fu_677_p1 = $signed(tmp_51_s_fu_671_p2);

assign tmp_52_fu_618_p1 = $signed(tmp_32_fu_612_p2);

assign tmp_54_to_int_fu_1032_p1 = reg_554;

assign tmp_55_1_to_int_fu_1233_p1 = reg_554;

assign tmp_55_fu_643_p1 = $signed(tmp_35_fu_638_p2);

assign tmp_56_1_fu_628_p2 = (ap_const_lv13_3 + tmp_31_reg_1811);

assign tmp_56_fu_1597_p1 = $signed(tmp_51_fu_1593_p2);

assign tmp_57_1_fu_633_p1 = $signed(tmp_56_1_fu_628_p2);

assign tmp_58_fu_1018_p3 = {{tmp_34_fu_1013_p2}, {ap_const_lv1_0}};

assign tmp_58_to_int_fu_1050_p1 = reg_559;

assign tmp_59_fu_1346_p4 = {{sorted_F_0_to_int_41_fu_1342_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_5_fu_1080_p2 = (notrhs_fu_1074_p2 | notlhs_fu_1068_p2);

assign tmp_60_1_to_int_fu_1251_p1 = reg_559;

assign tmp_60_fu_1026_p1 = tmp_58_fu_1018_p3;

assign tmp_61_fu_1372_p2 = (notrhs6_fu_1366_p2 | notlhs6_fu_1360_p2);

assign tmp_65_1_fu_648_p2 = (ap_const_lv13_5 + tmp_31_reg_1811);

assign tmp_65_fu_1624_p2 = (matchsum_q0 + ap_const_lv8_1);

assign tmp_66_1_fu_653_p1 = $signed(tmp_65_1_fu_648_p2);

assign tmp_66_fu_1390_p2 = (notrhs7_fu_1384_p2 | notlhs7_fu_1378_p2);

assign tmp_67_fu_1409_p2 = (tmp_61_reg_2025 & tmp_66_reg_2031);

assign tmp_68_fu_1218_p2 = (tmp_58_reg_1953 | ap_const_lv18_1);

assign tmp_69_fu_1619_p2 = (max_val_2_1_reg_2061 == ap_const_lv4_0? 1'b1: 1'b0);

assign tmp_6_fu_1098_p2 = (notrhs1_fu_1092_p2 | notlhs1_fu_1086_p2);

assign tmp_6_i_i1_fu_923_p1 = $unsigned(sh_assign_3_cast_fu_915_p1);

assign tmp_6_i_i_fu_764_p1 = $unsigned(sh_assign_1_cast_fu_756_p1);

assign tmp_70_fu_1469_p2 = (min_val_1_1_cast3_fu_1465_p1 + tmp_31_reg_1811);

assign tmp_71_fu_1474_p1 = $signed(tmp_70_fu_1469_p2);

assign tmp_72_fu_1505_p2 = (min_val_1_1_cast3_reg_2075 + tmp_32_reg_1822);

assign tmp_73_fu_1509_p1 = $signed(tmp_72_fu_1505_p2);

assign tmp_74_cast_fu_1479_p1 = min_val_1_1_fu_1457_p3;

assign tmp_74_fu_1223_p3 = {{ap_const_lv46_0}, {tmp_68_fu_1218_p2}};

assign tmp_75_fu_1494_p2 = (min_val_1_1_fu_1457_p3 == ap_const_lv4_0? 1'b1: 1'b0);

assign tmp_79_fu_1413_p2 = (tmp_67_fu_1409_p2 & tmp_78_reg_2036);

assign tmp_7_fu_1104_p2 = (tmp_5_fu_1080_p2 & tmp_6_fu_1098_p2);

assign tmp_7_i_i1_fu_927_p2 = p_Result_3_fu_867_p3 >> sh_assign_3_cast_cast_fu_919_p1;

assign tmp_7_i_i_fu_768_p2 = p_Result_1_fu_708_p3 >> sh_assign_1_cast_cast_fu_760_p1;

assign tmp_80_fu_1695_p2 = ($signed(j5_0_in_reg_407) > $signed(32'b00000000000000000000000000000000)? 1'b1: 1'b0);

assign tmp_81_fu_1701_p2 = (tmp_114_reg_2160 & tmp_80_fu_1695_p2);

assign tmp_84_fu_1571_p1 = $signed(tmp_83_reg_2104);

assign tmp_86_fu_1566_p1 = $signed(grp_fu_510_p2);

assign tmp_88_fu_1514_p1 = reg_572;

assign tmp_90_fu_1433_p2 = (or_cond_fu_1423_p2 | or_cond1_reg_1993);

assign tmp_91_fu_1186_p4 = {{sorted_F_0_1_to_int_fu_1182_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_92_cast_fu_1406_p1 = tmp_58_reg_1953;

assign tmp_92_fu_788_p1 = tmp_96_fu_780_p3;

assign tmp_93_fu_792_p4 = {{tmp_9_i_i_fu_774_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_94_fu_947_p1 = tmp_116_fu_939_p3;

assign tmp_95_fu_1212_p2 = (notrhs9_fu_1206_p2 | notlhs9_fu_1200_p2);

assign tmp_96_fu_780_p3 = tmp_7_i_i_fu_768_p2[ap_const_lv32_17];

assign tmp_97_fu_1396_p2 = (tmp_61_fu_1372_p2 & tmp_95_reg_1999);

assign tmp_99_fu_1401_p2 = (tmp_97_fu_1396_p2 & tmp_98_reg_2004);

assign tmp_9_fu_1110_p2 = (tmp_7_fu_1104_p2 & grp_fu_503_p2);

assign tmp_9_i_i1_fu_933_p2 = tmp_2_i_i1_fu_875_p1 << tmp_6_i_i1_fu_923_p1;

assign tmp_9_i_i_fu_774_p2 = tmp_2_i_i_fu_716_p1 << tmp_6_i_i_fu_764_p1;

assign tmp_fu_1164_p2 = (tmp_9_reg_1969 & tmp_23_reg_1982);

assign tmp_i_i_i1_cast6_fu_879_p1 = loc_V_2_fu_853_p4;

assign tmp_i_i_i_cast7_fu_720_p1 = loc_V_fu_694_p4;

assign tmp_s_fu_623_p1 = pixel;
always @ (posedge ap_clk) begin
    tmp_31_reg_1811[0] <= 1'b0;
    tmp_32_reg_1822[0] <= 1'b0;
    tmp_35_reg_1843[0] <= 1'b0;
    parameters_addr_9_reg_1849[0] <= 1'b0;
    parameters_addr_12_reg_1861[0] <= 1'b1;
    tmp_58_reg_1953[0] <= 1'b0;
    matchsum_addr_3_reg_1959[0] <= 1'b0;
    back_gauss_addr_reg_1964[0] <= 1'b0;
    matchsum_addr_4_reg_2009[0] <= 1'b1;
    back_gauss_addr_1_reg_2014[0] <= 1'b1;
    tmp_92_cast_reg_2047[0] <= 1'b0;
    tmp_92_cast_reg_2047[18] <= 1'b0;
    max_val_2_1_reg_2061[2] <= 1'b0;
    max_val_2_1_cast5_reg_2068[2] <= 1'b0;
    max_val_2_1_cast5_reg_2068[12:4] <= 9'b000000000;
    min_val_1_1_cast3_reg_2075[2] <= 1'b0;
    min_val_1_1_cast3_reg_2075[12:4] <= 9'b000000000;
end



endmodule //backsub_EM_ALGO

