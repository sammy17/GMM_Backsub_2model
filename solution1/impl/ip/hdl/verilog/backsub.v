// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="backsub,hls_ip_2015_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.789400,HLS_SYN_LAT=7343873,HLS_SYN_TPT=none,HLS_SYN_MEM=151,HLS_SYN_DSP=19,HLS_SYN_FF=8313,HLS_SYN_LUT=13082}" *)

module backsub (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem_offset_AWVALID,
        m_axi_gmem_offset_AWREADY,
        m_axi_gmem_offset_AWADDR,
        m_axi_gmem_offset_AWID,
        m_axi_gmem_offset_AWLEN,
        m_axi_gmem_offset_AWSIZE,
        m_axi_gmem_offset_AWBURST,
        m_axi_gmem_offset_AWLOCK,
        m_axi_gmem_offset_AWCACHE,
        m_axi_gmem_offset_AWPROT,
        m_axi_gmem_offset_AWQOS,
        m_axi_gmem_offset_AWREGION,
        m_axi_gmem_offset_AWUSER,
        m_axi_gmem_offset_WVALID,
        m_axi_gmem_offset_WREADY,
        m_axi_gmem_offset_WDATA,
        m_axi_gmem_offset_WSTRB,
        m_axi_gmem_offset_WLAST,
        m_axi_gmem_offset_WID,
        m_axi_gmem_offset_WUSER,
        m_axi_gmem_offset_ARVALID,
        m_axi_gmem_offset_ARREADY,
        m_axi_gmem_offset_ARADDR,
        m_axi_gmem_offset_ARID,
        m_axi_gmem_offset_ARLEN,
        m_axi_gmem_offset_ARSIZE,
        m_axi_gmem_offset_ARBURST,
        m_axi_gmem_offset_ARLOCK,
        m_axi_gmem_offset_ARCACHE,
        m_axi_gmem_offset_ARPROT,
        m_axi_gmem_offset_ARQOS,
        m_axi_gmem_offset_ARREGION,
        m_axi_gmem_offset_ARUSER,
        m_axi_gmem_offset_RVALID,
        m_axi_gmem_offset_RREADY,
        m_axi_gmem_offset_RDATA,
        m_axi_gmem_offset_RLAST,
        m_axi_gmem_offset_RID,
        m_axi_gmem_offset_RUSER,
        m_axi_gmem_offset_RRESP,
        m_axi_gmem_offset_BVALID,
        m_axi_gmem_offset_BREADY,
        m_axi_gmem_offset_BRESP,
        m_axi_gmem_offset_BID,
        m_axi_gmem_offset_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 41'b1;
parameter    ap_ST_st2_fsm_1 = 41'b10;
parameter    ap_ST_st3_fsm_2 = 41'b100;
parameter    ap_ST_st4_fsm_3 = 41'b1000;
parameter    ap_ST_st5_fsm_4 = 41'b10000;
parameter    ap_ST_st6_fsm_5 = 41'b100000;
parameter    ap_ST_st7_fsm_6 = 41'b1000000;
parameter    ap_ST_st8_fsm_7 = 41'b10000000;
parameter    ap_ST_st9_fsm_8 = 41'b100000000;
parameter    ap_ST_pp0_stg0_fsm_9 = 41'b1000000000;
parameter    ap_ST_st13_fsm_10 = 41'b10000000000;
parameter    ap_ST_st14_fsm_11 = 41'b100000000000;
parameter    ap_ST_st15_fsm_12 = 41'b1000000000000;
parameter    ap_ST_st16_fsm_13 = 41'b10000000000000;
parameter    ap_ST_st17_fsm_14 = 41'b100000000000000;
parameter    ap_ST_st18_fsm_15 = 41'b1000000000000000;
parameter    ap_ST_st19_fsm_16 = 41'b10000000000000000;
parameter    ap_ST_st20_fsm_17 = 41'b100000000000000000;
parameter    ap_ST_pp1_stg0_fsm_18 = 41'b1000000000000000000;
parameter    ap_ST_st24_fsm_19 = 41'b10000000000000000000;
parameter    ap_ST_st25_fsm_20 = 41'b100000000000000000000;
parameter    ap_ST_st26_fsm_21 = 41'b1000000000000000000000;
parameter    ap_ST_st27_fsm_22 = 41'b10000000000000000000000;
parameter    ap_ST_st28_fsm_23 = 41'b100000000000000000000000;
parameter    ap_ST_st29_fsm_24 = 41'b1000000000000000000000000;
parameter    ap_ST_st30_fsm_25 = 41'b10000000000000000000000000;
parameter    ap_ST_st31_fsm_26 = 41'b100000000000000000000000000;
parameter    ap_ST_st32_fsm_27 = 41'b1000000000000000000000000000;
parameter    ap_ST_st33_fsm_28 = 41'b10000000000000000000000000000;
parameter    ap_ST_pp2_stg0_fsm_29 = 41'b100000000000000000000000000000;
parameter    ap_ST_st37_fsm_30 = 41'b1000000000000000000000000000000;
parameter    ap_ST_st38_fsm_31 = 41'b10000000000000000000000000000000;
parameter    ap_ST_st39_fsm_32 = 41'b100000000000000000000000000000000;
parameter    ap_ST_st40_fsm_33 = 41'b1000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_34 = 41'b10000000000000000000000000000000000;
parameter    ap_ST_pp3_stg0_fsm_35 = 41'b100000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_36 = 41'b1000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_37 = 41'b10000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_38 = 41'b100000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_39 = 41'b1000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_40 = 41'b10000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 6;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM_OFFSET_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_OFFSET_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OFFSET_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_OFFSET_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_OFFSET_CACHE_VALUE = 3;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv17_0 = 17'b00000000000000000;
parameter    ap_const_lv19_0 = 19'b0000000000000000000;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_708 = 32'b11100001000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv32_12C = 32'b100101100;
parameter    ap_const_lv32_45992000 = 32'b1000101100110010010000000000000;
parameter    ap_const_lv32_3DB851EC = 32'b111101101110000101000111101100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv19_708 = 19'b11100001000;
parameter    ap_const_lv17_12C = 17'b100101100;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv11_708 = 11'b11100001000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv9_12C = 9'b100101100;
parameter    ap_const_lv18_1 = 18'b1;
parameter    ap_const_lv46_0 = 46'b0000000000000000000000000000000000000000000000;
parameter    ap_const_lv13_2 = 13'b10;
parameter    ap_const_lv13_3 = 13'b11;
parameter    ap_const_lv13_4 = 13'b100;
parameter    ap_const_lv13_5 = 13'b101;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (C_S_AXI_CRTL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_GMEM_WSTRB_WIDTH = (C_M_AXI_GMEM_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_WSTRB_WIDTH = (C_M_AXI_DATA_WIDTH / ap_const_int64_8);
parameter    C_M_AXI_GMEM_OFFSET_WSTRB_WIDTH = (C_M_AXI_GMEM_OFFSET_DATA_WIDTH / ap_const_int64_8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1 : 0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1 : 0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1 : 0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1 : 0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1 : 0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1 : 0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1 : 0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1 : 0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1 : 0] m_axi_gmem_BUSER;
output   m_axi_gmem_offset_AWVALID;
input   m_axi_gmem_offset_AWREADY;
output  [C_M_AXI_GMEM_OFFSET_ADDR_WIDTH - 1 : 0] m_axi_gmem_offset_AWADDR;
output  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_AWID;
output  [7:0] m_axi_gmem_offset_AWLEN;
output  [2:0] m_axi_gmem_offset_AWSIZE;
output  [1:0] m_axi_gmem_offset_AWBURST;
output  [1:0] m_axi_gmem_offset_AWLOCK;
output  [3:0] m_axi_gmem_offset_AWCACHE;
output  [2:0] m_axi_gmem_offset_AWPROT;
output  [3:0] m_axi_gmem_offset_AWQOS;
output  [3:0] m_axi_gmem_offset_AWREGION;
output  [C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH - 1 : 0] m_axi_gmem_offset_AWUSER;
output   m_axi_gmem_offset_WVALID;
input   m_axi_gmem_offset_WREADY;
output  [C_M_AXI_GMEM_OFFSET_DATA_WIDTH - 1 : 0] m_axi_gmem_offset_WDATA;
output  [C_M_AXI_GMEM_OFFSET_WSTRB_WIDTH - 1 : 0] m_axi_gmem_offset_WSTRB;
output   m_axi_gmem_offset_WLAST;
output  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_WID;
output  [C_M_AXI_GMEM_OFFSET_WUSER_WIDTH - 1 : 0] m_axi_gmem_offset_WUSER;
output   m_axi_gmem_offset_ARVALID;
input   m_axi_gmem_offset_ARREADY;
output  [C_M_AXI_GMEM_OFFSET_ADDR_WIDTH - 1 : 0] m_axi_gmem_offset_ARADDR;
output  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_ARID;
output  [7:0] m_axi_gmem_offset_ARLEN;
output  [2:0] m_axi_gmem_offset_ARSIZE;
output  [1:0] m_axi_gmem_offset_ARBURST;
output  [1:0] m_axi_gmem_offset_ARLOCK;
output  [3:0] m_axi_gmem_offset_ARCACHE;
output  [2:0] m_axi_gmem_offset_ARPROT;
output  [3:0] m_axi_gmem_offset_ARQOS;
output  [3:0] m_axi_gmem_offset_ARREGION;
output  [C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH - 1 : 0] m_axi_gmem_offset_ARUSER;
input   m_axi_gmem_offset_RVALID;
output   m_axi_gmem_offset_RREADY;
input  [C_M_AXI_GMEM_OFFSET_DATA_WIDTH - 1 : 0] m_axi_gmem_offset_RDATA;
input   m_axi_gmem_offset_RLAST;
input  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_RID;
input  [C_M_AXI_GMEM_OFFSET_RUSER_WIDTH - 1 : 0] m_axi_gmem_offset_RUSER;
input  [1:0] m_axi_gmem_offset_RRESP;
input   m_axi_gmem_offset_BVALID;
output   m_axi_gmem_offset_BREADY;
input  [1:0] m_axi_gmem_offset_BRESP;
input  [C_M_AXI_GMEM_OFFSET_ID_WIDTH - 1 : 0] m_axi_gmem_offset_BID;
input  [C_M_AXI_GMEM_OFFSET_BUSER_WIDTH - 1 : 0] m_axi_gmem_offset_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1 : 0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm = 41'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_59;
reg    ap_ready;
wire   [31:0] frame_in;
wire   [31:0] frame_out;
wire    init;
wire   [31:0] para;
reg   [10:0] parameters_address0;
reg    parameters_ce0;
reg    parameters_we0;
reg   [31:0] parameters_d0;
wire   [31:0] parameters_q0;
reg   [10:0] parameters_address1;
reg    parameters_ce1;
reg    parameters_we1;
reg   [31:0] parameters_d1;
wire   [31:0] parameters_q1;
reg   [8:0] data_array_address0;
reg    data_array_ce0;
reg    data_array_we0;
wire   [7:0] data_array_d0;
wire   [7:0] data_array_q0;
reg   [17:0] matchsum_address0;
reg    matchsum_ce0;
reg    matchsum_we0;
reg   [7:0] matchsum_d0;
wire   [7:0] matchsum_q0;
wire   [17:0] matchsum_address1;
reg    matchsum_ce1;
reg    matchsum_we1;
wire   [7:0] matchsum_d1;
reg   [17:0] back_gauss_address0;
reg    back_gauss_ce0;
reg    back_gauss_we0;
reg   [0:0] back_gauss_d0;
wire   [0:0] back_gauss_q0;
reg   [17:0] back_gauss_address1;
reg    back_gauss_ce1;
reg    back_gauss_we1;
reg   [0:0] back_gauss_d1;
reg   [8:0] out_frame_address0;
reg    out_frame_ce0;
reg    out_frame_we0;
wire   [0:0] out_frame_d0;
wire   [0:0] out_frame_q0;
wire   [31:0] ap_return;
wire    backsub_AXILiteS_s_axi_U_ap_dummy_ce;
wire    backsub_CRTL_BUS_s_axi_U_ap_dummy_ce;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWADDR;
wire   [0:0] gmem_AWID;
wire   [31:0] gmem_AWLEN;
wire   [2:0] gmem_AWSIZE;
wire   [1:0] gmem_AWBURST;
wire   [1:0] gmem_AWLOCK;
wire   [3:0] gmem_AWCACHE;
wire   [2:0] gmem_AWPROT;
wire   [3:0] gmem_AWQOS;
wire   [3:0] gmem_AWREGION;
wire   [0:0] gmem_AWUSER;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire   [7:0] gmem_WDATA;
wire   [0:0] gmem_WSTRB;
wire    gmem_WLAST;
wire   [0:0] gmem_WID;
wire   [0:0] gmem_WUSER;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire   [31:0] gmem_ARADDR;
wire   [0:0] gmem_ARID;
wire   [31:0] gmem_ARLEN;
wire   [2:0] gmem_ARSIZE;
wire   [1:0] gmem_ARBURST;
wire   [1:0] gmem_ARLOCK;
wire   [3:0] gmem_ARCACHE;
wire   [2:0] gmem_ARPROT;
wire   [3:0] gmem_ARQOS;
wire   [3:0] gmem_ARREGION;
wire   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    backsub_gmem_m_axi_U_ap_dummy_ce;
reg    gmem_offset_AWVALID;
wire    gmem_offset_AWREADY;
wire   [31:0] gmem_offset_AWADDR;
wire   [0:0] gmem_offset_AWID;
wire   [31:0] gmem_offset_AWLEN;
wire   [2:0] gmem_offset_AWSIZE;
wire   [1:0] gmem_offset_AWBURST;
wire   [1:0] gmem_offset_AWLOCK;
wire   [3:0] gmem_offset_AWCACHE;
wire   [2:0] gmem_offset_AWPROT;
wire   [3:0] gmem_offset_AWQOS;
wire   [3:0] gmem_offset_AWREGION;
wire   [0:0] gmem_offset_AWUSER;
reg    gmem_offset_WVALID;
wire    gmem_offset_WREADY;
wire   [31:0] gmem_offset_WDATA;
wire   [3:0] gmem_offset_WSTRB;
wire    gmem_offset_WLAST;
wire   [0:0] gmem_offset_WID;
wire   [0:0] gmem_offset_WUSER;
reg    gmem_offset_ARVALID;
wire    gmem_offset_ARREADY;
wire   [31:0] gmem_offset_ARADDR;
wire   [0:0] gmem_offset_ARID;
wire   [31:0] gmem_offset_ARLEN;
wire   [2:0] gmem_offset_ARSIZE;
wire   [1:0] gmem_offset_ARBURST;
wire   [1:0] gmem_offset_ARLOCK;
wire   [3:0] gmem_offset_ARCACHE;
wire   [2:0] gmem_offset_ARPROT;
wire   [3:0] gmem_offset_ARQOS;
wire   [3:0] gmem_offset_ARREGION;
wire   [0:0] gmem_offset_ARUSER;
wire    gmem_offset_RVALID;
reg    gmem_offset_RREADY;
wire   [31:0] gmem_offset_RDATA;
wire    gmem_offset_RLAST;
wire   [0:0] gmem_offset_RID;
wire   [0:0] gmem_offset_RUSER;
wire   [1:0] gmem_offset_RRESP;
wire    gmem_offset_BVALID;
reg    gmem_offset_BREADY;
wire   [1:0] gmem_offset_BRESP;
wire   [0:0] gmem_offset_BID;
wire   [0:0] gmem_offset_BUSER;
wire    backsub_gmem_offset_m_axi_U_ap_dummy_ce;
reg   [10:0] indvar_reg_482;
reg   [10:0] ap_reg_ppstg_indvar_reg_482_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_9;
reg    ap_sig_bdd_454;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] exitcond9_reg_990;
reg    ap_sig_bdd_463;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg   [8:0] indvar1_reg_494;
reg   [8:0] ap_reg_ppstg_indvar1_reg_494_pp1_it1;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_18;
reg    ap_sig_bdd_479;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg   [0:0] exitcond3_reg_1024;
reg    ap_sig_bdd_487;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
reg    ap_reg_ppiten_pp1_it2 = 1'b0;
reg   [8:0] indvar2_reg_530;
reg   [10:0] indvar3_reg_541;
reg   [31:0] grp_fu_577_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_506;
reg    ap_sig_ioackin_gmem_offset_ARREADY;
reg    ap_sig_cseq_ST_st45_fsm_36;
reg    ap_sig_bdd_517;
reg   [7:0] reg_602;
reg    ap_sig_cseq_ST_st26_fsm_21;
reg    ap_sig_bdd_526;
reg    ap_sig_cseq_ST_st30_fsm_25;
reg    ap_sig_bdd_533;
wire   [0:0] init_read_read_fu_212_p2;
reg   [0:0] init_read_reg_943;
wire   [30:0] tmp_10_cast_fu_617_p1;
reg   [30:0] tmp_10_cast_reg_947;
wire  signed [32:0] tmp_30_cast_fu_621_p1;
reg  signed [32:0] tmp_30_cast_reg_952;
wire  signed [32:0] tmp_31_cast_fu_625_p1;
reg  signed [32:0] tmp_31_cast_reg_957;
wire   [18:0] next_mul1_fu_629_p2;
reg   [18:0] next_mul1_reg_962;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_554;
wire   [16:0] next_mul_fu_635_p2;
reg   [16:0] next_mul_reg_967;
wire   [8:0] x_1_fu_647_p2;
reg   [8:0] x_1_reg_975;
wire   [30:0] tmp_7_fu_657_p2;
reg   [30:0] tmp_7_reg_980;
wire   [0:0] exitcond2_fu_641_p2;
wire   [63:0] tmp_10_fu_662_p1;
reg   [63:0] tmp_10_reg_985;
wire   [0:0] exitcond9_fu_666_p2;
reg   [0:0] ap_reg_ppstg_exitcond9_reg_990_pp0_it1;
wire   [10:0] indvar_next_fu_672_p2;
reg   [10:0] indvar_next_reg_994;
reg   [31:0] gmem_offset_addr_1_read_reg_999;
wire   [32:0] tmp_27_fu_683_p1;
reg   [32:0] tmp_27_reg_1004;
reg    ap_sig_cseq_ST_st13_fsm_10;
reg    ap_sig_bdd_584;
wire   [32:0] tmp_29_fu_687_p2;
reg   [32:0] tmp_29_reg_1009;
wire  signed [63:0] tmp_30_fu_692_p1;
reg  signed [63:0] tmp_30_reg_1014;
reg    ap_sig_cseq_ST_st14_fsm_11;
reg    ap_sig_bdd_595;
reg    ap_sig_ioackin_gmem_ARREADY;
reg   [31:0] grp_fu_584_p2;
wire   [0:0] exitcond3_fu_696_p2;
reg   [0:0] ap_reg_ppstg_exitcond3_reg_1024_pp1_it1;
wire   [8:0] indvar_next1_fu_702_p2;
reg   [8:0] indvar_next1_reg_1028;
reg   [7:0] gmem_addr_1_read_reg_1033;
wire   [8:0] j_1_fu_719_p2;
reg   [8:0] j_1_reg_1041;
reg    ap_sig_cseq_ST_st25_fsm_20;
reg    ap_sig_bdd_620;
wire   [63:0] tmp_24_fu_725_p1;
reg   [63:0] tmp_24_reg_1046;
wire   [0:0] exitcond_fu_713_p2;
wire   [8:0] i_1_fu_736_p2;
reg   [8:0] i_1_reg_1059;
wire   [12:0] tmp_11_fu_806_p2;
reg   [12:0] tmp_11_reg_1064;
wire   [0:0] exitcond1_fu_730_p2;
wire   [32:0] tmp_31_fu_832_p2;
reg   [32:0] tmp_31_reg_1072;
wire   [63:0] tmp_23_fu_864_p1;
reg   [63:0] tmp_23_reg_1077;
reg    ap_sig_cseq_ST_st29_fsm_24;
reg    ap_sig_bdd_657;
wire  signed [63:0] tmp_36_fu_897_p1;
reg  signed [63:0] tmp_36_reg_1087;
reg    ap_sig_cseq_ST_st33_fsm_28;
reg    ap_sig_bdd_668;
reg    ap_sig_ioackin_gmem_AWREADY;
wire   [0:0] exitcond4_fu_901_p2;
reg   [0:0] exitcond4_reg_1092;
reg    ap_sig_cseq_ST_pp2_stg0_fsm_29;
reg    ap_sig_bdd_681;
reg    ap_reg_ppiten_pp2_it0 = 1'b0;
reg    ap_reg_ppiten_pp2_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond4_reg_1092_pp2_it1;
reg    ap_sig_ioackin_gmem_WREADY;
reg    ap_reg_ppiten_pp2_it2 = 1'b0;
wire   [8:0] indvar_next2_fu_907_p2;
wire   [7:0] extLd_fu_918_p3;
reg   [7:0] extLd_reg_1106;
reg   [31:0] grp_fu_591_p2;
reg    ap_sig_cseq_ST_st37_fsm_30;
reg    ap_sig_bdd_717;
wire   [0:0] exitcond5_fu_926_p2;
reg   [0:0] exitcond5_reg_1116;
reg    ap_sig_cseq_ST_pp3_stg0_fsm_35;
reg    ap_sig_bdd_726;
reg    ap_reg_ppiten_pp3_it0 = 1'b0;
reg    ap_reg_ppiten_pp3_it1 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond5_reg_1116_pp3_it1;
reg    ap_sig_ioackin_gmem_offset_WREADY;
reg    ap_reg_ppiten_pp3_it2 = 1'b0;
wire   [10:0] indvar_next3_fu_932_p2;
reg   [31:0] parameters_load_reg_1130;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_761;
reg    ap_sig_cseq_ST_st20_fsm_17;
reg    ap_sig_bdd_773;
reg    ap_sig_cseq_ST_st41_fsm_34;
reg    ap_sig_bdd_788;
reg    ap_sig_ioackin_gmem_offset_AWREADY;
wire    grp_backsub_EM_ALGO_fu_552_ap_start;
wire    grp_backsub_EM_ALGO_fu_552_ap_done;
wire    grp_backsub_EM_ALGO_fu_552_ap_idle;
wire    grp_backsub_EM_ALGO_fu_552_ap_ready;
wire   [7:0] grp_backsub_EM_ALGO_fu_552_pixel;
reg   [8:0] grp_backsub_EM_ALGO_fu_552_pos_r;
wire   [10:0] grp_backsub_EM_ALGO_fu_552_parameters_address0;
wire    grp_backsub_EM_ALGO_fu_552_parameters_ce0;
wire    grp_backsub_EM_ALGO_fu_552_parameters_we0;
wire   [31:0] grp_backsub_EM_ALGO_fu_552_parameters_d0;
wire   [31:0] grp_backsub_EM_ALGO_fu_552_parameters_q0;
wire   [10:0] grp_backsub_EM_ALGO_fu_552_parameters_address1;
wire    grp_backsub_EM_ALGO_fu_552_parameters_ce1;
wire    grp_backsub_EM_ALGO_fu_552_parameters_we1;
wire   [31:0] grp_backsub_EM_ALGO_fu_552_parameters_d1;
wire   [31:0] grp_backsub_EM_ALGO_fu_552_parameters_q1;
wire   [8:0] grp_backsub_EM_ALGO_fu_552_x;
wire   [17:0] grp_backsub_EM_ALGO_fu_552_back_gauss_address0;
wire    grp_backsub_EM_ALGO_fu_552_back_gauss_ce0;
wire    grp_backsub_EM_ALGO_fu_552_back_gauss_we0;
wire   [0:0] grp_backsub_EM_ALGO_fu_552_back_gauss_d0;
wire   [0:0] grp_backsub_EM_ALGO_fu_552_back_gauss_q0;
wire   [17:0] grp_backsub_EM_ALGO_fu_552_back_gauss_address1;
wire    grp_backsub_EM_ALGO_fu_552_back_gauss_ce1;
wire    grp_backsub_EM_ALGO_fu_552_back_gauss_we1;
wire   [0:0] grp_backsub_EM_ALGO_fu_552_back_gauss_d1;
wire   [17:0] grp_backsub_EM_ALGO_fu_552_matchsum_address0;
wire    grp_backsub_EM_ALGO_fu_552_matchsum_ce0;
wire    grp_backsub_EM_ALGO_fu_552_matchsum_we0;
wire   [7:0] grp_backsub_EM_ALGO_fu_552_matchsum_d0;
wire   [7:0] grp_backsub_EM_ALGO_fu_552_matchsum_q0;
wire   [0:0] grp_backsub_EM_ALGO_fu_552_ap_return;
reg   [8:0] x_reg_447;
reg    ap_sig_cseq_ST_st49_fsm_40;
reg    ap_sig_bdd_841;
reg   [16:0] phi_mul_reg_459;
reg   [18:0] phi_mul9_reg_471;
reg   [10:0] indvar_phi_fu_486_p4;
reg   [8:0] indvar1_phi_fu_498_p4;
reg   [8:0] j_reg_506;
reg    ap_sig_cseq_ST_st28_fsm_23;
reg    ap_sig_bdd_870;
reg    ap_sig_cseq_ST_st24_fsm_19;
reg    ap_sig_bdd_880;
reg   [8:0] i_reg_518;
reg    ap_sig_cseq_ST_st32_fsm_27;
reg    ap_sig_bdd_890;
reg    grp_backsub_EM_ALGO_fu_552_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st27_fsm_22;
reg    ap_sig_bdd_905;
reg    ap_sig_cseq_ST_st31_fsm_26;
reg    ap_sig_bdd_912;
wire   [63:0] tmp_6_fu_678_p1;
wire   [63:0] tmp_8_fu_708_p1;
wire   [63:0] tmp_32_fu_760_p1;
wire   [63:0] tmp_34_fu_772_p3;
wire   [63:0] tmp_12_fu_816_p1;
wire   [63:0] tmp_14_fu_827_p1;
wire   [63:0] tmp_16_fu_845_p1;
wire   [63:0] tmp_18_fu_859_p1;
wire   [63:0] tmp_20_fu_878_p1;
wire   [63:0] tmp_22_fu_892_p1;
wire   [63:0] tmp_26_fu_913_p1;
wire   [63:0] tmp_28_fu_938_p1;
reg    ap_reg_ioackin_gmem_offset_ARREADY = 1'b0;
reg    ap_reg_ioackin_gmem_offset_AWREADY = 1'b0;
reg    ap_reg_ioackin_gmem_offset_WREADY = 1'b0;
reg    ap_reg_ioackin_gmem_ARREADY = 1'b0;
reg    ap_reg_ioackin_gmem_AWREADY = 1'b0;
reg    ap_reg_ioackin_gmem_WREADY = 1'b0;
wire   [29:0] tmp_4_fu_607_p4;
wire   [30:0] tmp_5_fu_653_p1;
wire   [16:0] i_cast8_fu_742_p1;
wire   [16:0] tmp_9_fu_746_p2;
wire   [17:0] tmp_s_fu_752_p3;
wire   [17:0] tmp_33_fu_766_p2;
wire   [11:0] p_shl_fu_782_p3;
wire   [9:0] p_shl1_fu_794_p3;
wire   [12:0] p_shl_cast_fu_790_p1;
wire   [12:0] p_shl1_cast_fu_802_p1;
wire  signed [31:0] tmp_11_cast_fu_812_p1;
wire   [31:0] tmp_13_fu_821_p2;
wire   [12:0] tmp_15_fu_836_p2;
wire  signed [31:0] tmp_15_cast_fu_841_p1;
wire   [12:0] tmp_17_fu_850_p2;
wire  signed [31:0] tmp_17_cast_fu_855_p1;
wire   [12:0] tmp_19_fu_869_p2;
wire  signed [31:0] tmp_19_cast_fu_874_p1;
wire   [12:0] tmp_21_fu_883_p2;
wire  signed [31:0] tmp_21_cast_fu_888_p1;
reg   [40:0] ap_NS_fsm;
reg    ap_sig_bdd_997;
reg    ap_sig_bdd_1416;
reg    ap_sig_bdd_994;


backsub_parameters #(
    .DataWidth( 32 ),
    .AddressRange( 1800 ),
    .AddressWidth( 11 ))
parameters_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( parameters_address0 ),
    .ce0( parameters_ce0 ),
    .we0( parameters_we0 ),
    .d0( parameters_d0 ),
    .q0( parameters_q0 ),
    .address1( parameters_address1 ),
    .ce1( parameters_ce1 ),
    .we1( parameters_we1 ),
    .d1( parameters_d1 ),
    .q1( parameters_q1 )
);

backsub_data_array #(
    .DataWidth( 8 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
data_array_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( data_array_address0 ),
    .ce0( data_array_ce0 ),
    .we0( data_array_we0 ),
    .d0( data_array_d0 ),
    .q0( data_array_q0 )
);

backsub_matchsum #(
    .DataWidth( 8 ),
    .AddressRange( 153600 ),
    .AddressWidth( 18 ))
matchsum_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( matchsum_address0 ),
    .ce0( matchsum_ce0 ),
    .we0( matchsum_we0 ),
    .d0( matchsum_d0 ),
    .q0( matchsum_q0 ),
    .address1( matchsum_address1 ),
    .ce1( matchsum_ce1 ),
    .we1( matchsum_we1 ),
    .d1( matchsum_d1 )
);

backsub_back_gauss #(
    .DataWidth( 1 ),
    .AddressRange( 153600 ),
    .AddressWidth( 18 ))
back_gauss_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( back_gauss_address0 ),
    .ce0( back_gauss_ce0 ),
    .we0( back_gauss_we0 ),
    .d0( back_gauss_d0 ),
    .q0( back_gauss_q0 ),
    .address1( back_gauss_address1 ),
    .ce1( back_gauss_ce1 ),
    .we1( back_gauss_we1 ),
    .d1( back_gauss_d1 )
);

backsub_out_frame #(
    .DataWidth( 1 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
out_frame_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .address0( out_frame_address0 ),
    .ce0( out_frame_ce0 ),
    .we0( out_frame_we0 ),
    .d0( out_frame_d0 ),
    .q0( out_frame_q0 )
);

backsub_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
backsub_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( backsub_AXILiteS_s_axi_U_ap_dummy_ce ),
    .frame_in( frame_in ),
    .frame_out( frame_out ),
    .para( para )
);

backsub_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
backsub_CRTL_BUS_s_axi_U(
    .AWVALID( s_axi_CRTL_BUS_AWVALID ),
    .AWREADY( s_axi_CRTL_BUS_AWREADY ),
    .AWADDR( s_axi_CRTL_BUS_AWADDR ),
    .WVALID( s_axi_CRTL_BUS_WVALID ),
    .WREADY( s_axi_CRTL_BUS_WREADY ),
    .WDATA( s_axi_CRTL_BUS_WDATA ),
    .WSTRB( s_axi_CRTL_BUS_WSTRB ),
    .ARVALID( s_axi_CRTL_BUS_ARVALID ),
    .ARREADY( s_axi_CRTL_BUS_ARREADY ),
    .ARADDR( s_axi_CRTL_BUS_ARADDR ),
    .RVALID( s_axi_CRTL_BUS_RVALID ),
    .RREADY( s_axi_CRTL_BUS_RREADY ),
    .RDATA( s_axi_CRTL_BUS_RDATA ),
    .RRESP( s_axi_CRTL_BUS_RRESP ),
    .BVALID( s_axi_CRTL_BUS_BVALID ),
    .BREADY( s_axi_CRTL_BUS_BREADY ),
    .BRESP( s_axi_CRTL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( backsub_CRTL_BUS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle ),
    .ap_return( ap_return ),
    .init( init )
);

backsub_gmem_m_axi #(
    .USER_DW( 8 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
backsub_gmem_m_axi_U(
    .AWVALID( m_axi_gmem_AWVALID ),
    .AWREADY( m_axi_gmem_AWREADY ),
    .AWADDR( m_axi_gmem_AWADDR ),
    .AWID( m_axi_gmem_AWID ),
    .AWLEN( m_axi_gmem_AWLEN ),
    .AWSIZE( m_axi_gmem_AWSIZE ),
    .AWBURST( m_axi_gmem_AWBURST ),
    .AWLOCK( m_axi_gmem_AWLOCK ),
    .AWCACHE( m_axi_gmem_AWCACHE ),
    .AWPROT( m_axi_gmem_AWPROT ),
    .AWQOS( m_axi_gmem_AWQOS ),
    .AWREGION( m_axi_gmem_AWREGION ),
    .AWUSER( m_axi_gmem_AWUSER ),
    .WVALID( m_axi_gmem_WVALID ),
    .WREADY( m_axi_gmem_WREADY ),
    .WDATA( m_axi_gmem_WDATA ),
    .WSTRB( m_axi_gmem_WSTRB ),
    .WLAST( m_axi_gmem_WLAST ),
    .WID( m_axi_gmem_WID ),
    .WUSER( m_axi_gmem_WUSER ),
    .ARVALID( m_axi_gmem_ARVALID ),
    .ARREADY( m_axi_gmem_ARREADY ),
    .ARADDR( m_axi_gmem_ARADDR ),
    .ARID( m_axi_gmem_ARID ),
    .ARLEN( m_axi_gmem_ARLEN ),
    .ARSIZE( m_axi_gmem_ARSIZE ),
    .ARBURST( m_axi_gmem_ARBURST ),
    .ARLOCK( m_axi_gmem_ARLOCK ),
    .ARCACHE( m_axi_gmem_ARCACHE ),
    .ARPROT( m_axi_gmem_ARPROT ),
    .ARQOS( m_axi_gmem_ARQOS ),
    .ARREGION( m_axi_gmem_ARREGION ),
    .ARUSER( m_axi_gmem_ARUSER ),
    .RVALID( m_axi_gmem_RVALID ),
    .RREADY( m_axi_gmem_RREADY ),
    .RDATA( m_axi_gmem_RDATA ),
    .RLAST( m_axi_gmem_RLAST ),
    .RID( m_axi_gmem_RID ),
    .RUSER( m_axi_gmem_RUSER ),
    .RRESP( m_axi_gmem_RRESP ),
    .BVALID( m_axi_gmem_BVALID ),
    .BREADY( m_axi_gmem_BREADY ),
    .BRESP( m_axi_gmem_BRESP ),
    .BID( m_axi_gmem_BID ),
    .BUSER( m_axi_gmem_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( backsub_gmem_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem_ARVALID ),
    .I_ARREADY( gmem_ARREADY ),
    .I_ARADDR( gmem_ARADDR ),
    .I_ARID( gmem_ARID ),
    .I_ARLEN( gmem_ARLEN ),
    .I_ARSIZE( gmem_ARSIZE ),
    .I_ARLOCK( gmem_ARLOCK ),
    .I_ARCACHE( gmem_ARCACHE ),
    .I_ARQOS( gmem_ARQOS ),
    .I_ARPROT( gmem_ARPROT ),
    .I_ARUSER( gmem_ARUSER ),
    .I_ARBURST( gmem_ARBURST ),
    .I_ARREGION( gmem_ARREGION ),
    .I_RVALID( gmem_RVALID ),
    .I_RREADY( gmem_RREADY ),
    .I_RDATA( gmem_RDATA ),
    .I_RID( gmem_RID ),
    .I_RUSER( gmem_RUSER ),
    .I_RRESP( gmem_RRESP ),
    .I_RLAST( gmem_RLAST ),
    .I_AWVALID( gmem_AWVALID ),
    .I_AWREADY( gmem_AWREADY ),
    .I_AWADDR( gmem_AWADDR ),
    .I_AWID( gmem_AWID ),
    .I_AWLEN( gmem_AWLEN ),
    .I_AWSIZE( gmem_AWSIZE ),
    .I_AWLOCK( gmem_AWLOCK ),
    .I_AWCACHE( gmem_AWCACHE ),
    .I_AWQOS( gmem_AWQOS ),
    .I_AWPROT( gmem_AWPROT ),
    .I_AWUSER( gmem_AWUSER ),
    .I_AWBURST( gmem_AWBURST ),
    .I_AWREGION( gmem_AWREGION ),
    .I_WVALID( gmem_WVALID ),
    .I_WREADY( gmem_WREADY ),
    .I_WDATA( gmem_WDATA ),
    .I_WID( gmem_WID ),
    .I_WUSER( gmem_WUSER ),
    .I_WLAST( gmem_WLAST ),
    .I_WSTRB( gmem_WSTRB ),
    .I_BVALID( gmem_BVALID ),
    .I_BREADY( gmem_BREADY ),
    .I_BRESP( gmem_BRESP ),
    .I_BID( gmem_BID ),
    .I_BUSER( gmem_BUSER )
);

backsub_gmem_offset_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_OFFSET_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_OFFSET_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_OFFSET_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_OFFSET_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_OFFSET_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_OFFSET_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_OFFSET_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_OFFSET_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_OFFSET_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_OFFSET_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_OFFSET_CACHE_VALUE ))
backsub_gmem_offset_m_axi_U(
    .AWVALID( m_axi_gmem_offset_AWVALID ),
    .AWREADY( m_axi_gmem_offset_AWREADY ),
    .AWADDR( m_axi_gmem_offset_AWADDR ),
    .AWID( m_axi_gmem_offset_AWID ),
    .AWLEN( m_axi_gmem_offset_AWLEN ),
    .AWSIZE( m_axi_gmem_offset_AWSIZE ),
    .AWBURST( m_axi_gmem_offset_AWBURST ),
    .AWLOCK( m_axi_gmem_offset_AWLOCK ),
    .AWCACHE( m_axi_gmem_offset_AWCACHE ),
    .AWPROT( m_axi_gmem_offset_AWPROT ),
    .AWQOS( m_axi_gmem_offset_AWQOS ),
    .AWREGION( m_axi_gmem_offset_AWREGION ),
    .AWUSER( m_axi_gmem_offset_AWUSER ),
    .WVALID( m_axi_gmem_offset_WVALID ),
    .WREADY( m_axi_gmem_offset_WREADY ),
    .WDATA( m_axi_gmem_offset_WDATA ),
    .WSTRB( m_axi_gmem_offset_WSTRB ),
    .WLAST( m_axi_gmem_offset_WLAST ),
    .WID( m_axi_gmem_offset_WID ),
    .WUSER( m_axi_gmem_offset_WUSER ),
    .ARVALID( m_axi_gmem_offset_ARVALID ),
    .ARREADY( m_axi_gmem_offset_ARREADY ),
    .ARADDR( m_axi_gmem_offset_ARADDR ),
    .ARID( m_axi_gmem_offset_ARID ),
    .ARLEN( m_axi_gmem_offset_ARLEN ),
    .ARSIZE( m_axi_gmem_offset_ARSIZE ),
    .ARBURST( m_axi_gmem_offset_ARBURST ),
    .ARLOCK( m_axi_gmem_offset_ARLOCK ),
    .ARCACHE( m_axi_gmem_offset_ARCACHE ),
    .ARPROT( m_axi_gmem_offset_ARPROT ),
    .ARQOS( m_axi_gmem_offset_ARQOS ),
    .ARREGION( m_axi_gmem_offset_ARREGION ),
    .ARUSER( m_axi_gmem_offset_ARUSER ),
    .RVALID( m_axi_gmem_offset_RVALID ),
    .RREADY( m_axi_gmem_offset_RREADY ),
    .RDATA( m_axi_gmem_offset_RDATA ),
    .RLAST( m_axi_gmem_offset_RLAST ),
    .RID( m_axi_gmem_offset_RID ),
    .RUSER( m_axi_gmem_offset_RUSER ),
    .RRESP( m_axi_gmem_offset_RRESP ),
    .BVALID( m_axi_gmem_offset_BVALID ),
    .BREADY( m_axi_gmem_offset_BREADY ),
    .BRESP( m_axi_gmem_offset_BRESP ),
    .BID( m_axi_gmem_offset_BID ),
    .BUSER( m_axi_gmem_offset_BUSER ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( backsub_gmem_offset_m_axi_U_ap_dummy_ce ),
    .I_ARVALID( gmem_offset_ARVALID ),
    .I_ARREADY( gmem_offset_ARREADY ),
    .I_ARADDR( gmem_offset_ARADDR ),
    .I_ARID( gmem_offset_ARID ),
    .I_ARLEN( gmem_offset_ARLEN ),
    .I_ARSIZE( gmem_offset_ARSIZE ),
    .I_ARLOCK( gmem_offset_ARLOCK ),
    .I_ARCACHE( gmem_offset_ARCACHE ),
    .I_ARQOS( gmem_offset_ARQOS ),
    .I_ARPROT( gmem_offset_ARPROT ),
    .I_ARUSER( gmem_offset_ARUSER ),
    .I_ARBURST( gmem_offset_ARBURST ),
    .I_ARREGION( gmem_offset_ARREGION ),
    .I_RVALID( gmem_offset_RVALID ),
    .I_RREADY( gmem_offset_RREADY ),
    .I_RDATA( gmem_offset_RDATA ),
    .I_RID( gmem_offset_RID ),
    .I_RUSER( gmem_offset_RUSER ),
    .I_RRESP( gmem_offset_RRESP ),
    .I_RLAST( gmem_offset_RLAST ),
    .I_AWVALID( gmem_offset_AWVALID ),
    .I_AWREADY( gmem_offset_AWREADY ),
    .I_AWADDR( gmem_offset_AWADDR ),
    .I_AWID( gmem_offset_AWID ),
    .I_AWLEN( gmem_offset_AWLEN ),
    .I_AWSIZE( gmem_offset_AWSIZE ),
    .I_AWLOCK( gmem_offset_AWLOCK ),
    .I_AWCACHE( gmem_offset_AWCACHE ),
    .I_AWQOS( gmem_offset_AWQOS ),
    .I_AWPROT( gmem_offset_AWPROT ),
    .I_AWUSER( gmem_offset_AWUSER ),
    .I_AWBURST( gmem_offset_AWBURST ),
    .I_AWREGION( gmem_offset_AWREGION ),
    .I_WVALID( gmem_offset_WVALID ),
    .I_WREADY( gmem_offset_WREADY ),
    .I_WDATA( gmem_offset_WDATA ),
    .I_WID( gmem_offset_WID ),
    .I_WUSER( gmem_offset_WUSER ),
    .I_WLAST( gmem_offset_WLAST ),
    .I_WSTRB( gmem_offset_WSTRB ),
    .I_BVALID( gmem_offset_BVALID ),
    .I_BREADY( gmem_offset_BREADY ),
    .I_BRESP( gmem_offset_BRESP ),
    .I_BID( gmem_offset_BID ),
    .I_BUSER( gmem_offset_BUSER )
);

backsub_EM_ALGO grp_backsub_EM_ALGO_fu_552(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( grp_backsub_EM_ALGO_fu_552_ap_start ),
    .ap_done( grp_backsub_EM_ALGO_fu_552_ap_done ),
    .ap_idle( grp_backsub_EM_ALGO_fu_552_ap_idle ),
    .ap_ready( grp_backsub_EM_ALGO_fu_552_ap_ready ),
    .pixel( grp_backsub_EM_ALGO_fu_552_pixel ),
    .pos_r( grp_backsub_EM_ALGO_fu_552_pos_r ),
    .parameters_address0( grp_backsub_EM_ALGO_fu_552_parameters_address0 ),
    .parameters_ce0( grp_backsub_EM_ALGO_fu_552_parameters_ce0 ),
    .parameters_we0( grp_backsub_EM_ALGO_fu_552_parameters_we0 ),
    .parameters_d0( grp_backsub_EM_ALGO_fu_552_parameters_d0 ),
    .parameters_q0( grp_backsub_EM_ALGO_fu_552_parameters_q0 ),
    .parameters_address1( grp_backsub_EM_ALGO_fu_552_parameters_address1 ),
    .parameters_ce1( grp_backsub_EM_ALGO_fu_552_parameters_ce1 ),
    .parameters_we1( grp_backsub_EM_ALGO_fu_552_parameters_we1 ),
    .parameters_d1( grp_backsub_EM_ALGO_fu_552_parameters_d1 ),
    .parameters_q1( grp_backsub_EM_ALGO_fu_552_parameters_q1 ),
    .x( grp_backsub_EM_ALGO_fu_552_x ),
    .back_gauss_address0( grp_backsub_EM_ALGO_fu_552_back_gauss_address0 ),
    .back_gauss_ce0( grp_backsub_EM_ALGO_fu_552_back_gauss_ce0 ),
    .back_gauss_we0( grp_backsub_EM_ALGO_fu_552_back_gauss_we0 ),
    .back_gauss_d0( grp_backsub_EM_ALGO_fu_552_back_gauss_d0 ),
    .back_gauss_q0( grp_backsub_EM_ALGO_fu_552_back_gauss_q0 ),
    .back_gauss_address1( grp_backsub_EM_ALGO_fu_552_back_gauss_address1 ),
    .back_gauss_ce1( grp_backsub_EM_ALGO_fu_552_back_gauss_ce1 ),
    .back_gauss_we1( grp_backsub_EM_ALGO_fu_552_back_gauss_we1 ),
    .back_gauss_d1( grp_backsub_EM_ALGO_fu_552_back_gauss_d1 ),
    .matchsum_address0( grp_backsub_EM_ALGO_fu_552_matchsum_address0 ),
    .matchsum_ce0( grp_backsub_EM_ALGO_fu_552_matchsum_ce0 ),
    .matchsum_we0( grp_backsub_EM_ALGO_fu_552_matchsum_we0 ),
    .matchsum_d0( grp_backsub_EM_ALGO_fu_552_matchsum_d0 ),
    .matchsum_q0( grp_backsub_EM_ALGO_fu_552_matchsum_q0 ),
    .ap_return( grp_backsub_EM_ALGO_fu_552_ap_return )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_gmem_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_11)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem_ARREADY)) begin
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_gmem_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_gmem_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_997) begin
            if (~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2))) begin
                ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_gmem_offset_ARREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_offset_ARREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem_offset_ARREADY)) begin
                ap_reg_ioackin_gmem_offset_ARREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem_offset_ARREADY)) begin
                ap_reg_ioackin_gmem_offset_ARREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_gmem_offset_AWREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_offset_AWREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34)) begin
            if (~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY))) begin
                ap_reg_ioackin_gmem_offset_AWREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_1416) begin
                ap_reg_ioackin_gmem_offset_AWREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ioackin_gmem_offset_WREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_offset_WREADY <= ap_const_logic_0;
    end else begin
        if (ap_sig_bdd_994) begin
            if (~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2))) begin
                ap_reg_ioackin_gmem_offset_WREADY <= ap_const_logic_0;
            end else if ((ap_const_logic_1 == gmem_offset_WREADY)) begin
                ap_reg_ioackin_gmem_offset_WREADY <= ap_const_logic_1;
            end
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond9_fu_666_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond9_fu_666_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond9_fu_666_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
            ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_696_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_17)) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == exitcond3_fu_696_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_17) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_696_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp1_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
    end else begin
        if (~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_17)) begin
            ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp2_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond4_fu_901_p2))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY))) begin
            ap_reg_ppiten_pp2_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp2_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & (ap_const_lv1_0 == exitcond4_fu_901_p2))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond4_fu_901_p2)))) begin
            ap_reg_ppiten_pp2_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp2_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2))) begin
            ap_reg_ppiten_pp2_it2 <= ap_reg_ppiten_pp2_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY))) begin
            ap_reg_ppiten_pp2_it2 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp3_it0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & ~(ap_const_lv1_0 == exitcond5_fu_926_p2))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) & ~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY)))) begin
            ap_reg_ppiten_pp3_it0 <= ap_const_logic_1;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp3_it1
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & (ap_const_lv1_0 == exitcond5_fu_926_p2))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) & ~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY))) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & ~(ap_const_lv1_0 == exitcond5_fu_926_p2)))) begin
            ap_reg_ppiten_pp3_it1 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp3_it2
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2))) begin
            ap_reg_ppiten_pp3_it2 <= ap_reg_ppiten_pp3_it1;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) & ~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY)))) begin
            ap_reg_ppiten_pp3_it2 <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_backsub_EM_ALGO_fu_552_ap_start_ap_start_reg
    if (ap_rst_n_inv == 1'b1) begin
        grp_backsub_EM_ALGO_fu_552_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_26))) begin
            grp_backsub_EM_ALGO_fu_552_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_backsub_EM_ALGO_fu_552_ap_ready)) begin
            grp_backsub_EM_ALGO_fu_552_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_19))) begin
        i_reg_518 <= ap_const_lv9_0;
    end else if ((~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        i_reg_518 <= i_1_reg_1059;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & (ap_const_lv1_0 == exitcond3_reg_1024) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar1_reg_494 <= indvar_next1_reg_1028;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_17)) begin
        indvar1_reg_494 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & (ap_const_lv1_0 == exitcond4_fu_901_p2))) begin
        indvar2_reg_530 <= indvar_next2_fu_907_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY))) begin
        indvar2_reg_530 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) & ~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY)))) begin
        indvar3_reg_541 <= ap_const_lv11_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & (ap_const_lv1_0 == exitcond5_fu_926_p2))) begin
        indvar3_reg_541 <= indvar_next3_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & (exitcond9_reg_990 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_reg_482 <= indvar_next_reg_994;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        indvar_reg_482 <= ap_const_lv11_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_lv1_0 == init_read_reg_943) & (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_19))) begin
        j_reg_506 <= ap_const_lv9_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) & ~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done))) begin
        j_reg_506 <= j_1_reg_1041;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_40) & ~(gmem_offset_BVALID == ap_const_logic_0))) begin
        phi_mul9_reg_471 <= next_mul1_reg_962;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        phi_mul9_reg_471 <= ap_const_lv19_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_40) & ~(gmem_offset_BVALID == ap_const_logic_0))) begin
        phi_mul_reg_459 <= next_mul_reg_967;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        phi_mul_reg_459 <= ap_const_lv17_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_40) & ~(gmem_offset_BVALID == ap_const_logic_0))) begin
        x_reg_447 <= x_1_reg_975;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        x_reg_447 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        ap_reg_ppstg_exitcond3_reg_1024_pp1_it1 <= exitcond3_reg_1024;
        ap_reg_ppstg_indvar1_reg_494_pp1_it1 <= indvar1_reg_494;
        exitcond3_reg_1024 <= exitcond3_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)))) begin
        ap_reg_ppstg_exitcond4_reg_1092_pp2_it1 <= exitcond4_reg_1092;
        exitcond4_reg_1092 <= exitcond4_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)))) begin
        ap_reg_ppstg_exitcond5_reg_1116_pp3_it1 <= exitcond5_reg_1116;
        exitcond5_reg_1116 <= exitcond5_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        ap_reg_ppstg_exitcond9_reg_990_pp0_it1 <= exitcond9_reg_990;
        ap_reg_ppstg_indvar_reg_482_pp0_it1 <= indvar_reg_482;
        exitcond9_reg_990 <= exitcond9_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & (ap_const_lv1_0 == exitcond4_reg_1092))) begin
        extLd_reg_1106 <= extLd_fu_918_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & (ap_const_lv1_0 == exitcond3_reg_1024) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        gmem_addr_1_read_reg_1033 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & (exitcond9_reg_990 == ap_const_lv1_0) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        gmem_offset_addr_1_read_reg_999 <= gmem_offset_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943))) begin
        i_1_reg_1059 <= i_1_fu_736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        indvar_next1_reg_1028 <= indvar_next1_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        indvar_next_reg_994 <= indvar_next_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        init_read_reg_943 <= init_read_read_fu_212_p2;
        tmp_10_cast_reg_947[29 : 0] <= tmp_10_cast_fu_617_p1[29 : 0];
        tmp_30_cast_reg_952 <= tmp_30_cast_fu_621_p1;
        tmp_31_cast_reg_957 <= tmp_31_cast_fu_625_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & (ap_const_lv1_0 == init_read_reg_943))) begin
        j_1_reg_1041 <= j_1_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        next_mul1_reg_962 <= next_mul1_fu_629_p2;
        next_mul_reg_967 <= next_mul_fu_635_p2;
        x_1_reg_975 <= x_1_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it1) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & (ap_const_lv1_0 == exitcond5_reg_1116))) begin
        parameters_load_reg_1130 <= parameters_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25))) begin
        reg_602 <= data_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_offset_ARREADY))) begin
        tmp_10_reg_985[30 : 0] <= tmp_10_fu_662_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2))) begin
        tmp_11_reg_1064[12 : 1] <= tmp_11_fu_806_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24)) begin
        tmp_23_reg_1077[8 : 0] <= tmp_23_fu_864_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & (ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond_fu_713_p2))) begin
        tmp_24_reg_1046[8 : 0] <= tmp_24_fu_725_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_10)) begin
        tmp_27_reg_1004[16 : 0] <= tmp_27_fu_683_p1[16 : 0];
        tmp_29_reg_1009 <= tmp_29_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_11) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_ARREADY))) begin
        tmp_30_reg_1014 <= tmp_30_fu_692_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & (((ap_const_lv1_0 == init_read_reg_943) & ~(ap_const_lv1_0 == exitcond_fu_713_p2)) | (~(ap_const_lv1_0 == init_read_reg_943) & ~(ap_const_lv1_0 == exitcond1_fu_730_p2))))) begin
        tmp_31_reg_1072 <= tmp_31_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28) & ~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY))) begin
        tmp_36_reg_1087 <= tmp_36_fu_897_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond2_fu_641_p2))) begin
        tmp_7_reg_980 <= tmp_7_fu_657_p2;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond2_fu_641_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_641_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond2_fu_641_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond2_fu_641_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_454) begin
    if (ap_sig_bdd_454) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_479) begin
    if (ap_sig_bdd_479) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_681) begin
    if (ap_sig_bdd_681) begin
        ap_sig_cseq_ST_pp2_stg0_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp2_stg0_fsm_29 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_726) begin
    if (ap_sig_bdd_726) begin
        ap_sig_cseq_ST_pp3_stg0_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp3_stg0_fsm_35 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_584) begin
    if (ap_sig_bdd_584) begin
        ap_sig_cseq_ST_st13_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_595) begin
    if (ap_sig_bdd_595) begin
        ap_sig_cseq_ST_st14_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_59) begin
    if (ap_sig_bdd_59) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_773) begin
    if (ap_sig_bdd_773) begin
        ap_sig_cseq_ST_st20_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_880) begin
    if (ap_sig_bdd_880) begin
        ap_sig_cseq_ST_st24_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_620) begin
    if (ap_sig_bdd_620) begin
        ap_sig_cseq_ST_st25_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_526) begin
    if (ap_sig_bdd_526) begin
        ap_sig_cseq_ST_st26_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_21 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_905) begin
    if (ap_sig_bdd_905) begin
        ap_sig_cseq_ST_st27_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_22 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_870) begin
    if (ap_sig_bdd_870) begin
        ap_sig_cseq_ST_st28_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_657) begin
    if (ap_sig_bdd_657) begin
        ap_sig_cseq_ST_st29_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_554) begin
    if (ap_sig_bdd_554) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_533) begin
    if (ap_sig_bdd_533) begin
        ap_sig_cseq_ST_st30_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_25 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_912) begin
    if (ap_sig_bdd_912) begin
        ap_sig_cseq_ST_st31_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_26 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_890) begin
    if (ap_sig_bdd_890) begin
        ap_sig_cseq_ST_st32_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_27 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_668) begin
    if (ap_sig_bdd_668) begin
        ap_sig_cseq_ST_st33_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_28 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_717) begin
    if (ap_sig_bdd_717) begin
        ap_sig_cseq_ST_st37_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_30 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_506) begin
    if (ap_sig_bdd_506) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_788) begin
    if (ap_sig_bdd_788) begin
        ap_sig_cseq_ST_st41_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_34 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_517) begin
    if (ap_sig_bdd_517) begin
        ap_sig_cseq_ST_st45_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_36 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_841) begin
    if (ap_sig_bdd_841) begin
        ap_sig_cseq_ST_st49_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_40 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_761) begin
    if (ap_sig_bdd_761) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (gmem_ARREADY or ap_reg_ioackin_gmem_ARREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem_ARREADY)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1;
    end
end

always @ (gmem_AWREADY or ap_reg_ioackin_gmem_AWREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem_AWREADY)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = ap_const_logic_1;
    end
end

always @ (gmem_WREADY or ap_reg_ioackin_gmem_WREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem_WREADY)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = ap_const_logic_1;
    end
end

always @ (gmem_offset_ARREADY or ap_reg_ioackin_gmem_offset_ARREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem_offset_ARREADY)) begin
        ap_sig_ioackin_gmem_offset_ARREADY = gmem_offset_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_offset_ARREADY = ap_const_logic_1;
    end
end

always @ (gmem_offset_AWREADY or ap_reg_ioackin_gmem_offset_AWREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem_offset_AWREADY)) begin
        ap_sig_ioackin_gmem_offset_AWREADY = gmem_offset_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_offset_AWREADY = ap_const_logic_1;
    end
end

always @ (gmem_offset_WREADY or ap_reg_ioackin_gmem_offset_WREADY) begin
    if ((ap_const_logic_0 == ap_reg_ioackin_gmem_offset_WREADY)) begin
        ap_sig_ioackin_gmem_offset_WREADY = gmem_offset_WREADY;
    end else begin
        ap_sig_ioackin_gmem_offset_WREADY = ap_const_logic_1;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_back_gauss_address0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27 or tmp_32_fu_760_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        back_gauss_address0 = tmp_32_fu_760_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_address0 = grp_backsub_EM_ALGO_fu_552_back_gauss_address0;
    end else begin
        back_gauss_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_back_gauss_address1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27 or tmp_34_fu_772_p3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        back_gauss_address1 = tmp_34_fu_772_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_address1 = grp_backsub_EM_ALGO_fu_552_back_gauss_address1;
    end else begin
        back_gauss_address1 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_back_gauss_ce0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        back_gauss_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_ce0 = grp_backsub_EM_ALGO_fu_552_back_gauss_ce0;
    end else begin
        back_gauss_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_back_gauss_ce1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        back_gauss_ce1 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_ce1 = grp_backsub_EM_ALGO_fu_552_back_gauss_ce1;
    end else begin
        back_gauss_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_back_gauss_d0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        back_gauss_d0 = ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_d0 = grp_backsub_EM_ALGO_fu_552_back_gauss_d0;
    end else begin
        back_gauss_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_back_gauss_d1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        back_gauss_d1 = ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_d1 = grp_backsub_EM_ALGO_fu_552_back_gauss_d1;
    end else begin
        back_gauss_d1 = 'bx;
    end
end

always @ (init_read_reg_943 or ap_sig_cseq_ST_st25_fsm_20 or exitcond1_fu_730_p2 or grp_backsub_EM_ALGO_fu_552_back_gauss_we0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2))) begin
        back_gauss_we0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_we0 = grp_backsub_EM_ALGO_fu_552_back_gauss_we0;
    end else begin
        back_gauss_we0 = ap_const_logic_0;
    end
end

always @ (init_read_reg_943 or ap_sig_cseq_ST_st25_fsm_20 or exitcond1_fu_730_p2 or grp_backsub_EM_ALGO_fu_552_back_gauss_we1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2))) begin
        back_gauss_we1 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        back_gauss_we1 = grp_backsub_EM_ALGO_fu_552_back_gauss_we1;
    end else begin
        back_gauss_we1 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_st25_fsm_20 or tmp_24_fu_725_p1 or tmp_23_fu_864_p1 or ap_sig_cseq_ST_st29_fsm_24 or tmp_8_fu_708_p1) begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2)) begin
        data_array_address0 = tmp_8_fu_708_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24)) begin
        data_array_address0 = tmp_23_fu_864_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        data_array_address0 = tmp_24_fu_725_p1;
    end else begin
        data_array_address0 = 'bx;
    end
end

always @ (ap_sig_bdd_487 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))))) begin
        data_array_ce0 = ap_const_logic_1;
    end else begin
        data_array_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_487 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_reg_ppstg_exitcond3_reg_1024_pp1_it1) begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond3_reg_1024_pp1_it1))) begin
        data_array_we0 = ap_const_logic_1;
    end else begin
        data_array_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st14_fsm_11 or ap_reg_ioackin_gmem_ARREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_11) & (ap_const_logic_0 == ap_reg_ioackin_gmem_ARREADY))) begin
        gmem_ARVALID = ap_const_logic_1;
    end else begin
        gmem_ARVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st33_fsm_28 or ap_reg_ioackin_gmem_AWREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28) & (ap_const_logic_0 == ap_reg_ioackin_gmem_AWREADY))) begin
        gmem_AWVALID = ap_const_logic_1;
    end else begin
        gmem_AWVALID = ap_const_logic_0;
    end
end

always @ (gmem_BVALID or ap_sig_cseq_ST_st41_fsm_34 or ap_sig_ioackin_gmem_offset_AWREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) & ~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY)))) begin
        gmem_BREADY = ap_const_logic_1;
    end else begin
        gmem_BREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp1_stg0_fsm_18 or exitcond3_reg_1024 or ap_sig_bdd_487 or ap_reg_ppiten_pp1_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & (ap_const_lv1_0 == exitcond3_reg_1024) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
        gmem_RREADY = ap_const_logic_1;
    end else begin
        gmem_RREADY = ap_const_logic_0;
    end
end

always @ (ap_reg_ppstg_exitcond4_reg_1092_pp2_it1 or ap_reg_ppiten_pp2_it2 or ap_reg_ioackin_gmem_WREADY) begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & (ap_const_logic_0 == ap_reg_ioackin_gmem_WREADY))) begin
        gmem_WVALID = ap_const_logic_1;
    end else begin
        gmem_WVALID = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_reg_ioackin_gmem_offset_ARREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_logic_0 == ap_reg_ioackin_gmem_offset_ARREADY))) begin
        gmem_offset_ARVALID = ap_const_logic_1;
    end else begin
        gmem_offset_ARVALID = ap_const_logic_0;
    end
end

always @ (gmem_BVALID or ap_sig_cseq_ST_st41_fsm_34 or ap_reg_ioackin_gmem_offset_AWREADY) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) & ~(gmem_BVALID == ap_const_logic_0) & (ap_const_logic_0 == ap_reg_ioackin_gmem_offset_AWREADY))) begin
        gmem_offset_AWVALID = ap_const_logic_1;
    end else begin
        gmem_offset_AWVALID = ap_const_logic_0;
    end
end

always @ (gmem_offset_BVALID or ap_sig_cseq_ST_st49_fsm_40) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st49_fsm_40) & ~(gmem_offset_BVALID == ap_const_logic_0))) begin
        gmem_offset_BREADY = ap_const_logic_1;
    end else begin
        gmem_offset_BREADY = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_9 or exitcond9_reg_990 or ap_sig_bdd_463 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & (exitcond9_reg_990 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        gmem_offset_RREADY = ap_const_logic_1;
    end else begin
        gmem_offset_RREADY = ap_const_logic_0;
    end
end

always @ (ap_reg_ppstg_exitcond5_reg_1116_pp3_it1 or ap_reg_ppiten_pp3_it2 or ap_reg_ioackin_gmem_offset_WREADY) begin
    if (((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2) & (ap_const_logic_0 == ap_reg_ioackin_gmem_offset_WREADY))) begin
        gmem_offset_WVALID = ap_const_logic_1;
    end else begin
        gmem_offset_WVALID = ap_const_logic_0;
    end
end

always @ (j_reg_506 or ap_sig_cseq_ST_st28_fsm_23 or i_reg_518 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27)) begin
        grp_backsub_EM_ALGO_fu_552_pos_r = i_reg_518;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23)) begin
        grp_backsub_EM_ALGO_fu_552_pos_r = j_reg_506;
    end else begin
        grp_backsub_EM_ALGO_fu_552_pos_r = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp0_stg0_fsm_9 or exitcond9_reg_990 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st45_fsm_36 or tmp_10_fu_662_p1 or tmp_10_reg_985 or ap_reg_ppstg_exitcond5_reg_1116_pp3_it1 or ap_reg_ppiten_pp3_it2 or ap_sig_cseq_ST_st41_fsm_34) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_34) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & (exitcond9_reg_990 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)))) begin
        grp_fu_577_p2 = tmp_10_reg_985;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_577_p2 = tmp_10_fu_662_p1;
    end else begin
        grp_fu_577_p2 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp1_stg0_fsm_18 or exitcond3_reg_1024 or ap_reg_ppiten_pp1_it1 or tmp_30_fu_692_p1 or tmp_30_reg_1014 or ap_sig_cseq_ST_st14_fsm_11) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & (ap_const_lv1_0 == exitcond3_reg_1024) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        grp_fu_584_p2 = tmp_30_reg_1014;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_11)) begin
        grp_fu_584_p2 = tmp_30_fu_692_p1;
    end else begin
        grp_fu_584_p2 = 'bx;
    end
end

always @ (tmp_36_fu_897_p1 or tmp_36_reg_1087 or ap_sig_cseq_ST_st33_fsm_28 or ap_reg_ppstg_exitcond4_reg_1092_pp2_it1 or ap_reg_ppiten_pp2_it2 or ap_sig_cseq_ST_st37_fsm_30) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_30) | ((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)))) begin
        grp_fu_591_p2 = tmp_36_reg_1087;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_28)) begin
        grp_fu_591_p2 = tmp_36_fu_897_p1;
    end else begin
        grp_fu_591_p2 = 'bx;
    end
end

always @ (indvar1_reg_494 or ap_sig_cseq_ST_pp1_stg0_fsm_18 or exitcond3_reg_1024 or ap_reg_ppiten_pp1_it1 or indvar_next1_reg_1028) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_18) & (ap_const_lv1_0 == exitcond3_reg_1024) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        indvar1_phi_fu_498_p4 = indvar_next1_reg_1028;
    end else begin
        indvar1_phi_fu_498_p4 = indvar1_reg_494;
    end
end

always @ (indvar_reg_482 or ap_sig_cseq_ST_pp0_stg0_fsm_9 or exitcond9_reg_990 or ap_reg_ppiten_pp0_it1 or indvar_next_reg_994) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_9) & (exitcond9_reg_990 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        indvar_phi_fu_486_p4 = indvar_next_reg_994;
    end else begin
        indvar_phi_fu_486_p4 = indvar_reg_482;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_matchsum_address0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27 or tmp_32_fu_760_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        matchsum_address0 = tmp_32_fu_760_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        matchsum_address0 = grp_backsub_EM_ALGO_fu_552_matchsum_address0;
    end else begin
        matchsum_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_matchsum_ce0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        matchsum_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        matchsum_ce0 = grp_backsub_EM_ALGO_fu_552_matchsum_ce0;
    end else begin
        matchsum_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        matchsum_ce1 = ap_const_logic_1;
    end else begin
        matchsum_ce1 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st25_fsm_20 or grp_backsub_EM_ALGO_fu_552_matchsum_d0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        matchsum_d0 = ap_const_lv8_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        matchsum_d0 = grp_backsub_EM_ALGO_fu_552_matchsum_d0;
    end else begin
        matchsum_d0 = 'bx;
    end
end

always @ (init_read_reg_943 or ap_sig_cseq_ST_st25_fsm_20 or exitcond1_fu_730_p2 or grp_backsub_EM_ALGO_fu_552_matchsum_we0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2))) begin
        matchsum_we0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        matchsum_we0 = grp_backsub_EM_ALGO_fu_552_matchsum_we0;
    end else begin
        matchsum_we0 = ap_const_logic_0;
    end
end

always @ (init_read_reg_943 or ap_sig_cseq_ST_st25_fsm_20 or exitcond1_fu_730_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2))) begin
        matchsum_we1 = ap_const_logic_1;
    end else begin
        matchsum_we1 = ap_const_logic_0;
    end
end

always @ (tmp_24_reg_1046 or tmp_23_reg_1077 or ap_sig_cseq_ST_pp2_stg0_fsm_29 or ap_reg_ppiten_pp2_it0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27 or tmp_26_fu_913_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27)) begin
        out_frame_address0 = tmp_23_reg_1077;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23)) begin
        out_frame_address0 = tmp_24_reg_1046;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0))) begin
        out_frame_address0 = tmp_26_fu_913_p1;
    end else begin
        out_frame_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_pp2_stg0_fsm_29 or ap_reg_ppiten_pp2_it0 or ap_reg_ppstg_exitcond4_reg_1092_pp2_it1 or ap_sig_ioackin_gmem_WREADY or ap_reg_ppiten_pp2_it2 or grp_backsub_EM_ALGO_fu_552_ap_done or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp2_stg0_fsm_29) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2))) | ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) & ~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done)) | (~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27)))) begin
        out_frame_ce0 = ap_const_logic_1;
    end else begin
        out_frame_ce0 = ap_const_logic_0;
    end
end

always @ (grp_backsub_EM_ALGO_fu_552_ap_done or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) & ~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done)) | (~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done) & (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27)))) begin
        out_frame_we0 = ap_const_logic_1;
    end else begin
        out_frame_we0 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st30_fsm_25 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24 or grp_backsub_EM_ALGO_fu_552_parameters_address0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27 or tmp_6_fu_678_p1 or tmp_12_fu_816_p1 or tmp_18_fu_859_p1 or tmp_22_fu_892_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25)) begin
        parameters_address0 = tmp_22_fu_892_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24)) begin
        parameters_address0 = tmp_18_fu_859_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        parameters_address0 = tmp_12_fu_816_p1;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        parameters_address0 = tmp_6_fu_678_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_address0 = grp_backsub_EM_ALGO_fu_552_parameters_address0;
    end else begin
        parameters_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st30_fsm_25 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24 or ap_sig_cseq_ST_pp3_stg0_fsm_35 or ap_reg_ppiten_pp3_it0 or grp_backsub_EM_ALGO_fu_552_parameters_address1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27 or tmp_14_fu_827_p1 or tmp_16_fu_845_p1 or tmp_20_fu_878_p1 or tmp_28_fu_938_p1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25)) begin
        parameters_address1 = tmp_20_fu_878_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24)) begin
        parameters_address1 = tmp_16_fu_845_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        parameters_address1 = tmp_14_fu_827_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0))) begin
        parameters_address1 = tmp_28_fu_938_p1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_address1 = grp_backsub_EM_ALGO_fu_552_parameters_address1;
    end else begin
        parameters_address1 = 'bx;
    end
end

always @ (ap_sig_bdd_463 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st30_fsm_25 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24 or grp_backsub_EM_ALGO_fu_552_parameters_ce0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        parameters_ce0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_ce0 = grp_backsub_EM_ALGO_fu_552_parameters_ce0;
    end else begin
        parameters_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st30_fsm_25 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24 or ap_sig_cseq_ST_pp3_stg0_fsm_35 or ap_reg_ppiten_pp3_it0 or ap_reg_ppstg_exitcond5_reg_1116_pp3_it1 or ap_sig_ioackin_gmem_offset_WREADY or ap_reg_ppiten_pp3_it2 or grp_backsub_EM_ALGO_fu_552_parameters_ce1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp3_stg0_fsm_35) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2))))) begin
        parameters_ce1 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_ce1 = grp_backsub_EM_ALGO_fu_552_parameters_ce1;
    end else begin
        parameters_ce1 = ap_const_logic_0;
    end
end

always @ (ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st30_fsm_25 or gmem_offset_addr_1_read_reg_999 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24 or grp_backsub_EM_ALGO_fu_552_parameters_d0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25)) begin
        parameters_d0 = ap_const_lv32_3DB851EC;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24)) begin
        parameters_d0 = ap_const_lv32_45992000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        parameters_d0 = ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) begin
        parameters_d0 = gmem_offset_addr_1_read_reg_999;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_d0 = grp_backsub_EM_ALGO_fu_552_parameters_d0;
    end else begin
        parameters_d0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st30_fsm_25 or ap_sig_cseq_ST_st25_fsm_20 or ap_sig_cseq_ST_st29_fsm_24 or grp_backsub_EM_ALGO_fu_552_parameters_d1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25)) begin
        parameters_d1 = ap_const_lv32_3DB851EC;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24)) begin
        parameters_d1 = ap_const_lv32_45992000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20)) begin
        parameters_d1 = ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_d1 = grp_backsub_EM_ALGO_fu_552_parameters_d1;
    end else begin
        parameters_d1 = 'bx;
    end
end

always @ (ap_sig_bdd_463 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_sig_cseq_ST_st30_fsm_25 or init_read_reg_943 or ap_reg_ppstg_exitcond9_reg_990_pp0_it1 or ap_sig_cseq_ST_st25_fsm_20 or exitcond1_fu_730_p2 or ap_sig_cseq_ST_st29_fsm_24 or grp_backsub_EM_ALGO_fu_552_parameters_we0 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25) | ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond9_reg_990_pp0_it1)))) begin
        parameters_we0 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_we0 = grp_backsub_EM_ALGO_fu_552_parameters_we0;
    end else begin
        parameters_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st30_fsm_25 or init_read_reg_943 or ap_sig_cseq_ST_st25_fsm_20 or exitcond1_fu_730_p2 or ap_sig_cseq_ST_st29_fsm_24 or grp_backsub_EM_ALGO_fu_552_parameters_we1 or ap_sig_cseq_ST_st28_fsm_23 or ap_sig_cseq_ST_st32_fsm_27) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_25) | ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_20) & ~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_24))) begin
        parameters_we1 = ap_const_logic_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_27))) begin
        parameters_we1 = grp_backsub_EM_ALGO_fu_552_parameters_we1;
    end else begin
        parameters_we1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or gmem_BVALID or gmem_offset_BVALID or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_463 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_487 or ap_reg_ppiten_pp1_it1 or ap_reg_ppiten_pp1_it2 or ap_sig_ioackin_gmem_offset_ARREADY or init_read_reg_943 or exitcond2_fu_641_p2 or exitcond9_fu_666_p2 or ap_sig_ioackin_gmem_ARREADY or exitcond3_fu_696_p2 or exitcond_fu_713_p2 or exitcond1_fu_730_p2 or ap_sig_ioackin_gmem_AWREADY or exitcond4_fu_901_p2 or ap_reg_ppiten_pp2_it0 or ap_reg_ppiten_pp2_it1 or ap_reg_ppstg_exitcond4_reg_1092_pp2_it1 or ap_sig_ioackin_gmem_WREADY or ap_reg_ppiten_pp2_it2 or exitcond5_fu_926_p2 or ap_reg_ppiten_pp3_it0 or ap_reg_ppiten_pp3_it1 or ap_reg_ppstg_exitcond5_reg_1116_pp3_it1 or ap_sig_ioackin_gmem_offset_WREADY or ap_reg_ppiten_pp3_it2 or ap_sig_ioackin_gmem_offset_AWREADY or grp_backsub_EM_ALGO_fu_552_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond2_fu_641_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem_offset_ARREADY)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_9;
        end
        ap_ST_pp0_stg0_fsm_9 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond9_fu_666_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_9;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_463 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond9_fu_666_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_st13_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_9;
            end
        end
        ap_ST_st13_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_11;
        end
        ap_ST_st14_fsm_11 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = ap_ST_st15_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_11;
            end
        end
        ap_ST_st15_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_13;
        end
        ap_ST_st16_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_14;
        end
        ap_ST_st17_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_15;
        end
        ap_ST_st18_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_16;
        end
        ap_ST_st19_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_17;
        end
        ap_ST_st20_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_pp1_stg0_fsm_18;
        end
        ap_ST_pp1_stg0_fsm_18 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_696_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_18;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp1_it2) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_487 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_696_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp1_it1)))) begin
                ap_NS_fsm = ap_ST_st24_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_18;
            end
        end
        ap_ST_st24_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_20;
        end
        ap_ST_st25_fsm_20 : 
        begin
            if ((~(ap_const_lv1_0 == init_read_reg_943) & (ap_const_lv1_0 == exitcond1_fu_730_p2))) begin
                ap_NS_fsm = ap_ST_st29_fsm_24;
            end else if ((((ap_const_lv1_0 == init_read_reg_943) & ~(ap_const_lv1_0 == exitcond_fu_713_p2)) | (~(ap_const_lv1_0 == init_read_reg_943) & ~(ap_const_lv1_0 == exitcond1_fu_730_p2)))) begin
                ap_NS_fsm = ap_ST_st33_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_21;
            end
        end
        ap_ST_st26_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_22;
        end
        ap_ST_st27_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_23;
        end
        ap_ST_st28_fsm_23 : 
        begin
            if (~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done)) begin
                ap_NS_fsm = ap_ST_st25_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st28_fsm_23;
            end
        end
        ap_ST_st29_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_25;
        end
        ap_ST_st30_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_26;
        end
        ap_ST_st31_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_27;
        end
        ap_ST_st32_fsm_27 : 
        begin
            if (~(ap_const_logic_0 == grp_backsub_EM_ALGO_fu_552_ap_done)) begin
                ap_NS_fsm = ap_ST_st25_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_27;
            end
        end
        ap_ST_st33_fsm_28 : 
        begin
            if (~(ap_const_logic_0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_29;
            end else begin
                ap_NS_fsm = ap_ST_st33_fsm_28;
            end
        end
        ap_ST_pp2_stg0_fsm_29 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond4_fu_901_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_29;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp2_it2) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp2_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2)) & ~(ap_const_lv1_0 == exitcond4_fu_901_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp2_it1)))) begin
                ap_NS_fsm = ap_ST_st37_fsm_30;
            end else begin
                ap_NS_fsm = ap_ST_pp2_stg0_fsm_29;
            end
        end
        ap_ST_st37_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_31;
        end
        ap_ST_st38_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_32;
        end
        ap_ST_st39_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_33;
        end
        ap_ST_st40_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_34;
        end
        ap_ST_st41_fsm_34 : 
        begin
            if (~((gmem_BVALID == ap_const_logic_0) | (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_AWREADY))) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st41_fsm_34;
            end
        end
        ap_ST_pp3_stg0_fsm_35 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp3_it2) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & ~(ap_const_lv1_0 == exitcond5_fu_926_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1)))) begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_35;
            end else if ((((ap_const_logic_1 == ap_reg_ppiten_pp3_it2) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1)) | ((ap_const_logic_1 == ap_reg_ppiten_pp3_it0) & ~((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_0 == ap_sig_ioackin_gmem_offset_WREADY) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2)) & ~(ap_const_lv1_0 == exitcond5_fu_926_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp3_it1)))) begin
                ap_NS_fsm = ap_ST_st45_fsm_36;
            end else begin
                ap_NS_fsm = ap_ST_pp3_stg0_fsm_35;
            end
        end
        ap_ST_st45_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_37;
        end
        ap_ST_st46_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_38;
        end
        ap_ST_st47_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_39;
        end
        ap_ST_st48_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_40;
        end
        ap_ST_st49_fsm_40 : 
        begin
            if (~(gmem_offset_BVALID == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st49_fsm_40;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = ap_const_lv32_0;


always @ (ap_rst_n) begin
    ap_rst_n_inv = ~ap_rst_n;
end


always @ (gmem_BVALID or gmem_offset_AWREADY) begin
    ap_sig_bdd_1416 = ((ap_const_logic_1 == gmem_offset_AWREADY) & ~(gmem_BVALID == ap_const_logic_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_454 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end


always @ (gmem_offset_RVALID or exitcond9_reg_990) begin
    ap_sig_bdd_463 = ((gmem_offset_RVALID == ap_const_logic_0) & (exitcond9_reg_990 == ap_const_lv1_0));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_479 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (gmem_RVALID or exitcond3_reg_1024) begin
    ap_sig_bdd_487 = ((gmem_RVALID == ap_const_logic_0) & (ap_const_lv1_0 == exitcond3_reg_1024));
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_506 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_517 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_526 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_533 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_554 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_584 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_59 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_595 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_620 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_657 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_668 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_681 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_717 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_726 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_761 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_773 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_788 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_841 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_870 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_880 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_890 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_905 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_912 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end


always @ (ap_reg_ppstg_exitcond5_reg_1116_pp3_it1 or ap_reg_ppiten_pp3_it2) begin
    ap_sig_bdd_994 = ((ap_const_lv1_0 == ap_reg_ppstg_exitcond5_reg_1116_pp3_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp3_it2));
end


always @ (ap_reg_ppstg_exitcond4_reg_1092_pp2_it1 or ap_reg_ppiten_pp2_it2) begin
    ap_sig_bdd_997 = ((ap_const_lv1_0 == ap_reg_ppstg_exitcond4_reg_1092_pp2_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp2_it2));
end

assign backsub_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign backsub_CRTL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;

assign backsub_gmem_m_axi_U_ap_dummy_ce = ap_const_logic_1;

assign backsub_gmem_offset_m_axi_U_ap_dummy_ce = ap_const_logic_1;

assign data_array_d0 = gmem_addr_1_read_reg_1033;

assign exitcond1_fu_730_p2 = (i_reg_518 == ap_const_lv9_12C? 1'b1: 1'b0);

assign exitcond2_fu_641_p2 = (x_reg_447 == ap_const_lv9_100? 1'b1: 1'b0);

assign exitcond3_fu_696_p2 = (indvar1_phi_fu_498_p4 == ap_const_lv9_12C? 1'b1: 1'b0);

assign exitcond4_fu_901_p2 = (indvar2_reg_530 == ap_const_lv9_12C? 1'b1: 1'b0);

assign exitcond5_fu_926_p2 = (indvar3_reg_541 == ap_const_lv11_708? 1'b1: 1'b0);

assign exitcond9_fu_666_p2 = (indvar_phi_fu_486_p4 == ap_const_lv11_708? 1'b1: 1'b0);

assign exitcond_fu_713_p2 = (j_reg_506 == ap_const_lv9_12C? 1'b1: 1'b0);

assign extLd_fu_918_p3 = ((out_frame_q0[0:0] === 1'b1) ? ap_const_lv8_FF : ap_const_lv8_0);

assign gmem_ARADDR = grp_fu_584_p2;

assign gmem_ARBURST = ap_const_lv2_0;

assign gmem_ARCACHE = ap_const_lv4_0;

assign gmem_ARID = ap_const_lv1_0;

assign gmem_ARLEN = ap_const_lv32_12C;

assign gmem_ARLOCK = ap_const_lv2_0;

assign gmem_ARPROT = ap_const_lv3_0;

assign gmem_ARQOS = ap_const_lv4_0;

assign gmem_ARREGION = ap_const_lv4_0;

assign gmem_ARSIZE = ap_const_lv3_0;

assign gmem_ARUSER = ap_const_lv1_0;

assign gmem_AWADDR = grp_fu_591_p2;

assign gmem_AWBURST = ap_const_lv2_0;

assign gmem_AWCACHE = ap_const_lv4_0;

assign gmem_AWID = ap_const_lv1_0;

assign gmem_AWLEN = ap_const_lv32_12C;

assign gmem_AWLOCK = ap_const_lv2_0;

assign gmem_AWPROT = ap_const_lv3_0;

assign gmem_AWQOS = ap_const_lv4_0;

assign gmem_AWREGION = ap_const_lv4_0;

assign gmem_AWSIZE = ap_const_lv3_0;

assign gmem_AWUSER = ap_const_lv1_0;

assign gmem_WDATA = extLd_reg_1106;

assign gmem_WID = ap_const_lv1_0;

assign gmem_WLAST = ap_const_logic_0;

assign gmem_WSTRB = ap_const_lv1_1;

assign gmem_WUSER = ap_const_lv1_0;

assign gmem_offset_ARADDR = grp_fu_577_p2;

assign gmem_offset_ARBURST = ap_const_lv2_0;

assign gmem_offset_ARCACHE = ap_const_lv4_0;

assign gmem_offset_ARID = ap_const_lv1_0;

assign gmem_offset_ARLEN = ap_const_lv32_708;

assign gmem_offset_ARLOCK = ap_const_lv2_0;

assign gmem_offset_ARPROT = ap_const_lv3_0;

assign gmem_offset_ARQOS = ap_const_lv4_0;

assign gmem_offset_ARREGION = ap_const_lv4_0;

assign gmem_offset_ARSIZE = ap_const_lv3_0;

assign gmem_offset_ARUSER = ap_const_lv1_0;

assign gmem_offset_AWADDR = grp_fu_577_p2;

assign gmem_offset_AWBURST = ap_const_lv2_0;

assign gmem_offset_AWCACHE = ap_const_lv4_0;

assign gmem_offset_AWID = ap_const_lv1_0;

assign gmem_offset_AWLEN = ap_const_lv32_708;

assign gmem_offset_AWLOCK = ap_const_lv2_0;

assign gmem_offset_AWPROT = ap_const_lv3_0;

assign gmem_offset_AWQOS = ap_const_lv4_0;

assign gmem_offset_AWREGION = ap_const_lv4_0;

assign gmem_offset_AWSIZE = ap_const_lv3_0;

assign gmem_offset_AWUSER = ap_const_lv1_0;

assign gmem_offset_WDATA = parameters_load_reg_1130;

assign gmem_offset_WID = ap_const_lv1_0;

assign gmem_offset_WLAST = ap_const_logic_0;

assign gmem_offset_WSTRB = ap_const_lv4_F;

assign gmem_offset_WUSER = ap_const_lv1_0;

assign grp_backsub_EM_ALGO_fu_552_ap_start = grp_backsub_EM_ALGO_fu_552_ap_start_ap_start_reg;

assign grp_backsub_EM_ALGO_fu_552_back_gauss_q0 = back_gauss_q0;

assign grp_backsub_EM_ALGO_fu_552_matchsum_q0 = matchsum_q0;

assign grp_backsub_EM_ALGO_fu_552_parameters_q0 = parameters_q0;

assign grp_backsub_EM_ALGO_fu_552_parameters_q1 = parameters_q1;

assign grp_backsub_EM_ALGO_fu_552_pixel = reg_602;

assign grp_backsub_EM_ALGO_fu_552_x = x_reg_447;

assign i_1_fu_736_p2 = (i_reg_518 + ap_const_lv9_1);

assign i_cast8_fu_742_p1 = i_reg_518;

assign indvar_next1_fu_702_p2 = (indvar1_phi_fu_498_p4 + ap_const_lv9_1);

assign indvar_next2_fu_907_p2 = (indvar2_reg_530 + ap_const_lv9_1);

assign indvar_next3_fu_932_p2 = (indvar3_reg_541 + ap_const_lv11_1);

assign indvar_next_fu_672_p2 = (indvar_phi_fu_486_p4 + ap_const_lv11_1);

assign init_read_read_fu_212_p2 = init;

assign j_1_fu_719_p2 = (j_reg_506 + ap_const_lv9_1);

assign matchsum_address1 = tmp_34_fu_772_p3;

assign matchsum_d1 = ap_const_lv8_0;

assign next_mul1_fu_629_p2 = (phi_mul9_reg_471 + ap_const_lv19_708);

assign next_mul_fu_635_p2 = (phi_mul_reg_459 + ap_const_lv17_12C);

assign out_frame_d0 = grp_backsub_EM_ALGO_fu_552_ap_return;

assign p_shl1_cast_fu_802_p1 = p_shl1_fu_794_p3;

assign p_shl1_fu_794_p3 = {{i_reg_518}, {ap_const_lv1_0}};

assign p_shl_cast_fu_790_p1 = p_shl_fu_782_p3;

assign p_shl_fu_782_p3 = {{i_reg_518}, {ap_const_lv3_0}};

assign tmp_10_cast_fu_617_p1 = tmp_4_fu_607_p4;

assign tmp_10_fu_662_p1 = tmp_7_reg_980;

assign tmp_11_cast_fu_812_p1 = $signed(tmp_11_fu_806_p2);

assign tmp_11_fu_806_p2 = (p_shl_cast_fu_790_p1 - p_shl1_cast_fu_802_p1);

assign tmp_12_fu_816_p1 = $unsigned(tmp_11_cast_fu_812_p1);

assign tmp_13_fu_821_p2 = (tmp_11_cast_fu_812_p1 | ap_const_lv32_1);

assign tmp_14_fu_827_p1 = tmp_13_fu_821_p2;

assign tmp_15_cast_fu_841_p1 = $signed(tmp_15_fu_836_p2);

assign tmp_15_fu_836_p2 = (tmp_11_reg_1064 + ap_const_lv13_2);

assign tmp_16_fu_845_p1 = $unsigned(tmp_15_cast_fu_841_p1);

assign tmp_17_cast_fu_855_p1 = $signed(tmp_17_fu_850_p2);

assign tmp_17_fu_850_p2 = (tmp_11_reg_1064 + ap_const_lv13_3);

assign tmp_18_fu_859_p1 = $unsigned(tmp_17_cast_fu_855_p1);

assign tmp_19_cast_fu_874_p1 = $signed(tmp_19_fu_869_p2);

assign tmp_19_fu_869_p2 = (tmp_11_reg_1064 + ap_const_lv13_4);

assign tmp_20_fu_878_p1 = $unsigned(tmp_19_cast_fu_874_p1);

assign tmp_21_cast_fu_888_p1 = $signed(tmp_21_fu_883_p2);

assign tmp_21_fu_883_p2 = (tmp_11_reg_1064 + ap_const_lv13_5);

assign tmp_22_fu_892_p1 = $unsigned(tmp_21_cast_fu_888_p1);

assign tmp_23_fu_864_p1 = i_reg_518;

assign tmp_24_fu_725_p1 = j_reg_506;

assign tmp_26_fu_913_p1 = indvar2_reg_530;

assign tmp_27_fu_683_p1 = phi_mul_reg_459;

assign tmp_28_fu_938_p1 = indvar3_reg_541;

assign tmp_29_fu_687_p2 = ($signed(tmp_27_fu_683_p1) + $signed(tmp_31_cast_reg_957));

assign tmp_30_cast_fu_621_p1 = $signed(frame_out);

assign tmp_30_fu_692_p1 = $signed(tmp_29_reg_1009);

assign tmp_31_cast_fu_625_p1 = $signed(frame_in);

assign tmp_31_fu_832_p2 = ($signed(tmp_27_reg_1004) + $signed(tmp_30_cast_reg_952));

assign tmp_32_fu_760_p1 = tmp_s_fu_752_p3;

assign tmp_33_fu_766_p2 = (tmp_s_fu_752_p3 | ap_const_lv18_1);

assign tmp_34_fu_772_p3 = {{ap_const_lv46_0}, {tmp_33_fu_766_p2}};

assign tmp_36_fu_897_p1 = $signed(tmp_31_reg_1072);

assign tmp_4_fu_607_p4 = {{para[ap_const_lv32_1F : ap_const_lv32_2]}};

assign tmp_5_fu_653_p1 = phi_mul9_reg_471;

assign tmp_6_fu_678_p1 = ap_reg_ppstg_indvar_reg_482_pp0_it1;

assign tmp_7_fu_657_p2 = (tmp_5_fu_653_p1 + tmp_10_cast_reg_947);

assign tmp_8_fu_708_p1 = ap_reg_ppstg_indvar1_reg_494_pp1_it1;

assign tmp_9_fu_746_p2 = (i_cast8_fu_742_p1 + phi_mul_reg_459);

assign tmp_s_fu_752_p3 = {{tmp_9_fu_746_p2}, {ap_const_lv1_0}};

assign x_1_fu_647_p2 = (x_reg_447 + ap_const_lv9_1);
always @ (posedge ap_clk) begin
    tmp_10_cast_reg_947[30] <= 1'b0;
    tmp_10_reg_985[63:31] <= 33'b000000000000000000000000000000000;
    tmp_27_reg_1004[32:17] <= 16'b0000000000000000;
    tmp_24_reg_1046[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_11_reg_1064[0] <= 1'b0;
    tmp_23_reg_1077[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end



endmodule //backsub

